[{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Single outcome event of interest","text":"Let’s first load packages required. ’ll create cdm reference use example MGUS2 survival dataset. practice use CDMConnector package connect data mapped OMOP CDM. vignette ’ll first estimate survival following diagnosis MGUS, death outcome interest. typically need define study cohorts , case example data already cohorts available. can see diagnosis cohort also number additional features recorded individuals ’ll use stratification.","code":"library(CDMConnector) library(CohortSurvival) library(dplyr) library(ggplot2) cdm <- CohortSurvival::mockMGUS2cdm() cdm$mgus_diagnosis %>%    glimpse() #> Rows: ?? #> Columns: 10 #> Database: DuckDB v1.1.2 [unknown@Linux 6.5.0-1025-azure:R 4.4.2/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15… #> $ cohort_start_date    <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ cohort_end_date      <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ age                  <dbl> 88, 78, 94, 68, 90, 90, 89, 87, 86, 79, 86, 89, 8… #> $ sex                  <fct> F, F, M, M, F, M, F, F, F, F, M, F, M, F, M, F, F… #> $ hgb                  <dbl> 13.1, 11.5, 10.5, 15.2, 10.7, 12.9, 10.5, 12.3, 1… #> $ creat                <dbl> 1.30, 1.20, 1.50, 1.20, 0.80, 1.00, 0.90, 1.20, 0… #> $ mspike               <dbl> 0.5, 2.0, 2.6, 1.2, 1.0, 0.5, 1.3, 1.6, 2.4, 2.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \">=70\", \">=70\", \">…  cdm$death_cohort %>%    glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.1.2 [unknown@Linux 6.5.0-1025-azure:R 4.4.2/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1… #> $ cohort_start_date    <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, … #> $ cohort_end_date      <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, …"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"overall-survival","dir":"Articles","previous_headings":"","what":"Overall survival","title":"Single outcome event of interest","text":"First, can estimate survival cohort overall like . Note output summarised result format. can though convert result survival format using asSurvivalResult() can see results outputted long format. can plot results like .  returned results also attributes containing information summarises survival.","code":"MGUS_death <- estimateSingleEventSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"death_cohort\" ) MGUS_death %>%    glimpse() #> Rows: 1,354 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock… #> $ group_name       <chr> \"target_cohort\", \"target_cohort\", \"target_cohort\", \"t… #> $ group_level      <chr> \"mgus_diagnosis\", \"mgus_diagnosis\", \"mgus_diagnosis\",… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"outcome\", \"outcome\", \"outcome\", \"outcome\", \"outcome\"… #> $ variable_level   <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"deat… #> $ estimate_name    <chr> \"estimate\", \"estimate_95CI_lower\", \"estimate_95CI_upp… #> $ estimate_type    <chr> \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\"… #> $ estimate_value   <chr> \"1\", \"1\", \"1\", \"0.9697\", \"0.9607\", \"0.9787\", \"0.9494\"… #> $ additional_name  <chr> \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time… #> $ additional_level <chr> \"0\", \"0\", \"0\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"3\", \"3\"… class(MGUS_death) #> [1] \"summarised_result\" \"omop_result\"       \"tbl_df\"            #> [4] \"tbl\"               \"data.frame\" MGUS_death %>%    asSurvivalResult() %>%   glimpse() #> Rows: 1,275 #> Columns: 13 #> $ cdm_name          <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"moc… #> $ target_cohort     <chr> \"mgus_diagnosis\", \"mgus_diagnosis\", \"mgus_diagnosis\"… #> $ outcome           <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"dea… #> $ competing_outcome <chr> \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"non… #> $ strata_name       <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall… #> $ strata_level      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall… #> $ variable_name     <chr> \"outcome\", \"outcome\", \"outcome\", \"outcome\", \"outcome… #> $ variable_level    <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"dea… #> $ estimate_name     <chr> \"estimate\", \"estimate_95CI_lower\", \"estimate_95CI_up… #> $ estimate_type     <chr> \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric… #> $ estimate_value    <dbl> 1.0000, 1.0000, 1.0000, 0.9697, 0.9607, 0.9787, 0.94… #> $ time              <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5… #> $ result_type       <chr> \"survival_probability\", \"survival_probability\", \"sur… plotSurvival(MGUS_death) tableSurvival(MGUS_death)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"with-stratification","dir":"Articles","previous_headings":"","what":"With stratification","title":"Single outcome event of interest","text":"estimate survival particular strata interest need features added target cohort table. defined, seen already number example characteristics added diagnosis cohort, can add stratifications like . can see well results strata, ’ll always also overall results returned.  also now summary statistics strata well overall.","code":"MGUS_death <- estimateSingleEventSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"death_cohort\",   strata = list(c(\"age_group\"),                 c(\"sex\"),                 c(\"age_group\", \"sex\")) ) plotSurvival(MGUS_death,              facet = \"strata_name\",              colour = \"strata_level\") tableSurvival(MGUS_death)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"disconnect-from-the-cdm-database-connection","dir":"Articles","previous_headings":"","what":"Disconnect from the cdm database connection","title":"Single outcome event of interest","text":"","code":"cdm_disconnect(cdm)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a02_Competing_risk_survival.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Competing risk survival","text":"Let’s first load packages required. ’ll create cdm reference use example MGUS2 survival dataset. practice use CDMConnector package connect data mapped OMOP CDM. proceed single event survival, time considering event interest (progression disease) competing risk (mortality). typically need define study cohorts , case example data already cohorts available. can see diagnosis cohort also number additional features recorded individuals ’ll use stratification.","code":"library(CDMConnector) library(CohortSurvival) library(dplyr) library(ggplot2) cdm <- CohortSurvival::mockMGUS2cdm() cdm$mgus_diagnosis %>%    glimpse() #> Rows: ?? #> Columns: 10 #> Database: DuckDB v1.1.2 [unknown@Linux 6.5.0-1025-azure:R 4.4.2/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15… #> $ cohort_start_date    <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ cohort_end_date      <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ age                  <dbl> 88, 78, 94, 68, 90, 90, 89, 87, 86, 79, 86, 89, 8… #> $ sex                  <fct> F, F, M, M, F, M, F, F, F, F, M, F, M, F, M, F, F… #> $ hgb                  <dbl> 13.1, 11.5, 10.5, 15.2, 10.7, 12.9, 10.5, 12.3, 1… #> $ creat                <dbl> 1.30, 1.20, 1.50, 1.20, 0.80, 1.00, 0.90, 1.20, 0… #> $ mspike               <dbl> 0.5, 2.0, 2.6, 1.2, 1.0, 0.5, 1.3, 1.6, 2.4, 2.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \">=70\", \">=70\", \">…  cdm$death_cohort %>%    glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.1.2 [unknown@Linux 6.5.0-1025-azure:R 4.4.2/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1… #> $ cohort_start_date    <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, … #> $ cohort_end_date      <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, …  cdm$progression %>%   glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.1.2 [unknown@Linux 6.5.0-1025-azure:R 4.4.2/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 56, 81, 83, 111, 124, 127, 147, 163, 165, 167, 18… #> $ cohort_start_date    <date> 1978-01-30, 1985-01-15, 1974-08-17, 1993-01-14, … #> $ cohort_end_date      <date> 1978-01-30, 1985-01-15, 1974-08-17, 1993-01-14, …"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a02_Competing_risk_survival.html","id":"estimating-survival-with-competing-risk","dir":"Articles","previous_headings":"","what":"Estimating survival with competing risk","title":"Competing risk survival","text":"package allows estimate survival outcome competing risk outcome. can stratify, see information events, summarise estimates check contributing participants way single event survival analysis. can see results outputted long format. can plot results like .  returned results also attributes containing information summarises survival.","code":"MGUS_death_prog <- estimateCompetingRiskSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"progression\",   competingOutcomeCohortTable = \"death_cohort\" )   MGUS_death_prog %>%    asSurvivalResult() %>%    glimpse() #> Rows: 2,550 #> Columns: 13 #> $ cdm_name          <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"moc… #> $ target_cohort     <chr> \"mgus_diagnosis\", \"mgus_diagnosis\", \"mgus_diagnosis\"… #> $ outcome           <chr> \"progression\", \"progression\", \"progression\", \"progre… #> $ competing_outcome <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"dea… #> $ strata_name       <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall… #> $ strata_level      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall… #> $ variable_name     <chr> \"outcome\", \"outcome\", \"outcome\", \"outcome\", \"outcome… #> $ variable_level    <chr> \"progression\", \"progression\", \"progression\", \"progre… #> $ estimate_name     <chr> \"estimate\", \"estimate_95CI_lower\", \"estimate_95CI_up… #> $ estimate_type     <chr> \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric… #> $ estimate_value    <dbl> 0.0000, 0.0000, 0.0000, 0.0000, NA, NA, 0.0014, 0.00… #> $ time              <dbl> 0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5… #> $ result_type       <chr> \"cumulative_failure_probability\", \"cumulative_failur… plotSurvival(MGUS_death_prog, cumulativeFailure = TRUE,              colour = \"variable_level\") +    theme(legend.position = \"top\") tableSurvival(MGUS_death_prog)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a02_Competing_risk_survival.html","id":"with-stratification","dir":"Articles","previous_headings":"","what":"With stratification","title":"Competing risk survival","text":"estimate survival particular strata interest need features added target cohort table. defined, seen already number example characteristics added diagnosis cohort, can add stratifications like . can see well results strata, ’ll always also overall results returned. can filter output table plot results different strata levels. can also ask cumulative failure probability plotted instead survival probability.  also now summary statistics strata well overall.","code":"MGUS_death_prog <-  estimateCompetingRiskSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"progression\",   competingOutcomeCohortTable = \"death_cohort\",   strata = list(c(\"sex\")) ) plotSurvival(MGUS_death_prog %>%                 dplyr::filter(strata_name != \"Overall\"),               facet = \"strata_level\",              colour = \"variable_level\",              cumulativeFailure = TRUE) tableSurvival(MGUS_death_prog)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a02_Competing_risk_survival.html","id":"disconnect-from-the-cdm-database-connection","dir":"Articles","previous_headings":"","what":"Disconnect from the cdm database connection","title":"Competing risk survival","text":"","code":"cdm_disconnect(cdm)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a03_Further_survival_analyses.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Further survival analyses","text":"Let’s first load packages required. ’ll create cdm reference use example MGUS2 survival dataset. practice use CDMConnector package connect data mapped OMOP CDM. CohortSurvival package implemented functionality complex survival analyses Kaplar Meier curves, like Cox Proportional Hazards modelling. However, format data inputted well-known modelling functions packages like survival cmprskcan retrieved OMOP data -built functions package. Let’s see single event competing risk survival settings.","code":"library(CDMConnector) library(CohortSurvival) library(dplyr) library(cmprsk) library(survival) cdm <- CohortSurvival::mockMGUS2cdm()"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a03_Further_survival_analyses.html","id":"further-analysis-with-single-event-survival","dir":"Articles","previous_headings":"","what":"Further analysis with single event survival","title":"Further survival analyses","text":"get time status information need coxph function package survival, instance, need call addCohortSurvival. stratification variables need columns previously added cohort user. information enough call advanced function, like:","code":"input_survival_single <- cdm$mgus_diagnosis %>%        addCohortSurvival(        cdm = cdm,        outcomeCohortTable = \"death_cohort\",        outcomeCohortId = 1        )   input_survival_single %>%    glimpse() #> Rows: ?? #> Columns: 13 #> Database: DuckDB v1.1.2 [unknown@Linux 6.5.0-1025-azure:R 4.4.2/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 19, 2… #> $ cohort_start_date    <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ cohort_end_date      <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ age                  <dbl> 88, 78, 94, 68, 90, 90, 89, 87, 79, 86, 80, 85, 9… #> $ sex                  <fct> F, F, M, M, F, M, F, F, F, M, F, M, F, M, M, F, F… #> $ hgb                  <dbl> 13.1, 11.5, 10.5, 15.2, 10.7, 12.9, 10.5, 12.3, 9… #> $ creat                <dbl> 1.3, 1.2, 1.5, 1.2, 0.8, 1.0, 0.9, 1.2, 1.1, 1.0,… #> $ mspike               <dbl> 0.5, 2.0, 2.6, 1.2, 1.0, 0.5, 1.3, 1.6, 2.3, 2.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \">=70\", \">=70\", \">… #> $ days_to_exit         <int> 30, 25, 46, 92, 8, 4, 151, 2, 136, 2, 14, 18, 43,… #> $ status               <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ time                 <dbl> 30, 25, 46, 92, 8, 4, 151, 2, 136, 2, 14, 18, 43,… survival::coxph(survival::Surv(time, status) ~ age + sex, data = input_survival_single) #> Call: #> survival::coxph(formula = survival::Surv(time, status) ~ age +  #>     sex, data = input_survival_single) #>  #>          coef exp(coef) se(coef)      z        p #> age  0.061622  1.063561 0.003402 18.114  < 2e-16 #> sexM 0.358258  1.430835 0.065693  5.454 4.94e-08 #>  #> Likelihood ratio test=391.2  on 2 df, p=< 2.2e-16 #> n= 1384, number of events= 963 survival::survdiff(survival::Surv(time, status) ~ sex, data = input_survival_single) #> Call: #> survival::survdiff(formula = survival::Surv(time, status) ~ sex,  #>     data = input_survival_single) #>  #>         N Observed Expected (O-E)^2/E (O-E)^2/V #> sex=F 631      423      471      4.88      9.67 #> sex=M 753      540      492      4.67      9.67 #>  #>  Chisq= 9.7  on 1 degrees of freedom, p= 0.002"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a03_Further_survival_analyses.html","id":"further-analysis-with-competing-risk-survival","dir":"Articles","previous_headings":"","what":"Further analysis with competing risk survival","title":"Further survival analyses","text":"competing risk, similar function adds time status information cohort interest. need specify outcome competing outcome interest. can also choose options follow time, censoring specific date, washout periods, others. can use package cmprsk fit Fine Gray model competing risk data. first change sex covariate numeric.","code":"input_survival_cr <- cdm$mgus_diagnosis %>%   addCompetingRiskCohortSurvival(     cdm = cdm,     outcomeCohortTable = \"progression\",     outcomeCohortId = 1,     competingOutcomeCohortTable = \"death_cohort\",     competingOutcomeCohortId = 1   ) %>%    glimpse() #> Rows: 1,384 #> Columns: 13 #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 56, 81, 124, 127, 147, 163, 165, 180, 186, 190, 1… #> $ cohort_start_date    <date> 1978-01-01, 1985-01-01, 1974-01-01, 1978-01-01, … #> $ cohort_end_date      <date> 1978-01-01, 1985-01-01, 1974-01-01, 1978-01-01, … #> $ age                  <dbl> 78, 91, 73, 73, 58, 57, 80, 70, 76, 78, 54, 79, 6… #> $ sex                  <fct> M, F, M, M, M, F, M, F, F, M, F, M, M, M, F, M, F… #> $ hgb                  <dbl> 10.3, 5.9, 15.3, 12.4, 13.1, 12.2, 11.0, 14.3, 12… #> $ creat                <dbl> 3.0, 1.0, 1.2, 1.6, 1.1, 0.8, 1.4, 1.2, 0.9, 1.1,… #> $ mspike               <dbl> 1.9, 0.0, 1.7, 1.4, 0.8, 1.9, 2.0, 1.6, 1.9, 0.9,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \">=70\", \"<70\", \"<70\", \">=… #> $ days_to_exit         <int> 44, 21, 82, 60, 189, 260, 85, 107, 104, 101, 171,… #> $ time                 <dbl> 29, 14, 80, 30, 188, 201, 76, 81, 51, 101, 153, 8… #> $ status               <fct> 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1… input_survival_cr <- input_survival_cr %>%   dplyr::mutate(sex = dplyr::if_else(sex == \"M\", 0, 1))  covs <- data.frame(input_survival_cr$age, input_survival_cr$sex) names(covs) <- c(\"age\", \"sex\")  summary(cmprsk::crr(ftime = input_survival_cr$time,             fstatus = input_survival_cr$status,             cov1 = covs,             failcode = 1,             cencode = 0)) #> Competing Risks Regression #>  #> Call: #> cmprsk::crr(ftime = input_survival_cr$time, fstatus = input_survival_cr$status,  #>     cov1 = covs, failcode = 1, cencode = 0) #>  #>        coef exp(coef) se(coef)     z p-value #> age -0.0192     0.981  0.00585 -3.28   0.001 #> sex  0.2871     1.333  0.19309  1.49   0.140 #>  #>     exp(coef) exp(-coef)  2.5% 97.5% #> age     0.981       1.02 0.970 0.992 #> sex     1.333       0.75 0.913 1.945 #>  #> Num. cases = 1384 #> Pseudo Log-likelihood = -726  #> Pseudo likelihood ratio test = 8.32  on 2 df,"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a03_Further_survival_analyses.html","id":"disconnect-from-the-cdm-database-connection","dir":"Articles","previous_headings":"","what":"Disconnect from the cdm database connection","title":"Further survival analyses","text":"","code":"cdm_disconnect(cdm)"},{"path":"https://darwin-eu.github.io/CohortSurvival/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edward Burn. Author, maintainer. Kim López-Güell. Author. Marti Catala. Author. Xintong Li. Author. Danielle Newby. Author. Nuria Mercade-Besora. Author.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burn E, López-Güell K, Catala M, Li X, Newby D, Mercade-Besora N (2024). CohortSurvival: Estimate Survival Common Data Model Cohorts. R package version 0.6.0, https://darwin-eu-dev.github.io/CohortSurvival/.","code":"@Manual{,   title = {CohortSurvival: Estimate Survival from Common Data Model Cohorts},   author = {Edward Burn and Kim López-Güell and Marti Catala and Xintong Li and Danielle Newby and Nuria Mercade-Besora},   year = {2024},   note = {R package version 0.6.0},   url = {https://darwin-eu-dev.github.io/CohortSurvival/}, }"},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"cohortsurvival-","dir":"","previous_headings":"","what":"Estimate Survival from Common Data Model Cohorts","title":"Estimate Survival from Common Data Model Cohorts","text":"CohortSurvival contains functions extracting summarising survival data using OMOP common data model.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Survival from Common Data Model Cohorts","text":"can install CohortSurvival like :","code":"install.packages(\"CohortSurvival\")"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"create-a-reference-to-data-in-the-omop-cdm-format","dir":"","previous_headings":"Example usage","what":"Create a reference to data in the OMOP CDM format","title":"Estimate Survival from Common Data Model Cohorts","text":"CohortSurvival package designed work data OMOP CDM format, first step create reference data using CDMConnector package. example ´ll use cdm reference containing MGUS2 dataset survival package (transformed set OMOP CDM style cohort tables). mgus2 dataset contains survival data 1341 sequential patients monoclonal gammopathy undetermined significance (MGUS). information see ?survival::mgus2 cdm reference three cohort tables interest: 1) MGUS diagnosis cohort MGUS progression cohort Death cohort","code":"library(CDMConnector) library(CohortSurvival) library(dplyr) library(ggplot2)  cdm <- CohortSurvival::mockMGUS2cdm() cdm$mgus_diagnosis %>%   glimpse() #> Rows: ?? #> Columns: 10 #> Database: DuckDB v1.0.0 [eburn@Windows 10 x64:R 4.4.0/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15… #> $ cohort_start_date    <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ cohort_end_date      <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ age                  <dbl> 88, 78, 94, 68, 90, 90, 89, 87, 86, 79, 86, 89, 8… #> $ sex                  <fct> F, F, M, M, F, M, F, F, F, F, M, F, M, F, M, F, F… #> $ hgb                  <dbl> 13.1, 11.5, 10.5, 15.2, 10.7, 12.9, 10.5, 12.3, 1… #> $ creat                <dbl> 1.30, 1.20, 1.50, 1.20, 0.80, 1.00, 0.90, 1.20, 0… #> $ mspike               <dbl> 0.5, 2.0, 2.6, 1.2, 1.0, 0.5, 1.3, 1.6, 2.4, 2.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \">=70\", \">=70\", \">… cdm$progression %>%   glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.0.0 [eburn@Windows 10 x64:R 4.4.0/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 56, 81, 83, 111, 124, 127, 147, 163, 165, 167, 18… #> $ cohort_start_date    <date> 1978-01-30, 1985-01-15, 1974-08-17, 1993-01-14, … #> $ cohort_end_date      <date> 1978-01-30, 1985-01-15, 1974-08-17, 1993-01-14, … cdm$death_cohort %>%   glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.0.0 [eburn@Windows 10 x64:R 4.4.0/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1… #> $ cohort_start_date    <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, … #> $ cohort_end_date      <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, …"},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"mgus-diagnosis-to-death","dir":"","previous_headings":"Example usage","what":"MGUS diagnosis to death","title":"Estimate Survival from Common Data Model Cohorts","text":"can get survival estimates death following MGUS diagnosis like : Now results, can quickly create plot summarising survival time.  well estimating survival cohort overall, can also estimate survival strata. strata based variables added target cohort.","code":"MGUS_death <- estimateSingleEventSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"death_cohort\" ) MGUS_death |>    glimpse() #> Rows: 1,330 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock… #> $ group_name       <chr> \"cohort\", \"cohort\", \"cohort\", \"cohort\", \"cohort\", \"co… #> $ group_level      <chr> \"mgus_diagnosis\", \"mgus_diagnosis\", \"mgus_diagnosis\",… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"survival_probability\", \"survival_probability\", \"surv… #> $ variable_level   <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"deat… #> $ estimate_name    <chr> \"estimate\", \"estimate_95CI_lower\", \"estimate_95CI_upp… #> $ estimate_type    <chr> \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\"… #> $ estimate_value   <chr> \"1\", \"1\", \"1\", \"0.9697\", \"0.9607\", \"0.9787\", \"0.9494\"… #> $ additional_name  <chr> \"time &&& outcome\", \"time &&& outcome\", \"time &&& out… #> $ additional_level <chr> \"0 &&& death_cohort\", \"0 &&& death_cohort\", \"0 &&& de… plotSurvival(MGUS_death) MGUS_death <- estimateSingleEventSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"death_cohort\",   strata = list(c(\"age_group\"),                 c(\"sex\"),                 c(\"age_group\", \"sex\")) )  plotSurvival(MGUS_death,               colour = \"strata_level\",               facet= \"strata_name\")"},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"estimating-survival-accounting-for-a-competing-risk","dir":"","previous_headings":"","what":"Estimating survival accounting for a competing risk","title":"Estimate Survival from Common Data Model Cohorts","text":"package also allows estimate survival outcome competing risk outcome. can stratify, see information events, summarise estimates check contributing participants way single event survival analysis.  single event survival, can stratify competing risk analysis.","code":"MGUS_death_prog <- estimateCompetingRiskSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"progression\",   competingOutcomeCohortTable = \"death_cohort\" )  plotSurvival(MGUS_death_prog, cumulativeFailure = TRUE,              colour = \"variable_level\") MGUS_death_prog <-  estimateCompetingRiskSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"progression\",   competingOutcomeCohortTable = \"death_cohort\",   strata = list(c(\"age_group\", \"sex\")) )  plotSurvival(MGUS_death_prog  %>%              dplyr::filter(strata_name != \"overall\"),               cumulativeFailure = TRUE,              facet = \"strata_level\",              colour = \"variable_level\")"},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"disconnect-from-the-cdm-database-connection","dir":"","previous_headings":"Estimating survival accounting for a competing risk","what":"Disconnect from the cdm database connection","title":"Estimate Survival from Common Data Model Cohorts","text":"","code":"cdm_disconnect(cdm)"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/CohortSurvival-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CohortSurvival: Estimate Survival from Common Data Model Cohorts — CohortSurvival-package","title":"CohortSurvival: Estimate Survival from Common Data Model Cohorts — CohortSurvival-package","text":"Estimate survival using data mapped Observational Medical Outcomes Partnership common data model. Survival can estimated based user-defined study cohorts.","code":""},{"path":[]},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/CohortSurvival-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CohortSurvival: Estimate Survival from Common Data Model Cohorts — CohortSurvival-package","text":"Maintainer: Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) Authors: Kim López-Güell kim.lopez@spc.ox.ac.uk (ORCID) Marti Catala marti.catalasabate@ndorms.ox.ac.uk (ORCID) Xintong Li xintong.li@ndorms.ox.ac.uk (ORCID) Danielle Newby danielle.newby@ndorms.ox.ac.uk (ORCID) Nuria Mercade-Besora nuria.mercadebesora@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Add survival information to a cohort table — addCohortSurvival","title":"Add survival information to a cohort table — addCohortSurvival","text":"Add survival information cohort table","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add survival information to a cohort table — addCohortSurvival","text":"","code":"addCohortSurvival(   x,   cdm,   outcomeCohortTable,   outcomeCohortId = 1,   outcomeDateVariable = \"cohort_start_date\",   outcomeWashout = Inf,   censorOnCohortExit = FALSE,   censorOnDate = NULL,   followUpDays = Inf )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add survival information to a cohort table — addCohortSurvival","text":"x cohort table add survival information cdm CDM reference outcomeCohortTable outcome cohort table interest. outcomeCohortId ID event cohorts include. one outcome (one ID) can considered. outcomeDateVariable Variable containing date outcome event outcomeWashout Washout time days outcome censorOnCohortExit TRUE, individual's follow censored cohort exit censorOnDate NULL, individual's follow censored given date followUpDays Number days follow individuals (lower bound 1, upper bound Inf)","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add survival information to a cohort table — addCohortSurvival","text":"Two additional columns added x. \"time\" column contain number days censoring. \"status\" column indicate whether patient event (value: 1), event (value: 0)","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add survival information to a cohort table — addCohortSurvival","text":"","code":"# \\donttest{  cdm <- mockMGUS2cdm() cdm$mgus_diagnosis <- cdm$mgus_diagnosis %>%   addCohortSurvival(     cdm = cdm,     outcomeCohortTable = \"death_cohort\",     outcomeCohortId = 1   )   # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCompetingRiskCohortSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Add competing risk survival information to a cohort table — addCompetingRiskCohortSurvival","title":"Add competing risk survival information to a cohort table — addCompetingRiskCohortSurvival","text":"Add competing risk survival information cohort table","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCompetingRiskCohortSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add competing risk survival information to a cohort table — addCompetingRiskCohortSurvival","text":"","code":"addCompetingRiskCohortSurvival(   x,   cdm,   outcomeCohortTable,   outcomeCohortId = 1,   outcomeDateVariable = \"cohort_start_date\",   outcomeWashout = Inf,   outcomeCensorOnCohortExit = FALSE,   outcomeCensorOnDate = NULL,   outcomeFollowUpDays = Inf,   competingOutcomeCohortTable,   competingOutcomeCohortId = 1,   competingOutcomeDateVariable = \"cohort_start_date\",   competingOutcomeWashout = Inf,   competingOutcomeCensorOnCohortExit = FALSE,   competingOutcomeCensorOnDate = NULL,   competingOutcomeFollowUpDays = Inf )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCompetingRiskCohortSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add competing risk survival information to a cohort table — addCompetingRiskCohortSurvival","text":"x cohort table add survival information cdm CDM reference outcomeCohortTable outcome cohort table interest. outcomeCohortId ID event cohorts include. one outcome (one ID) can considered. outcomeDateVariable Variable containing date outcome event outcomeWashout Washout time days outcome outcomeCensorOnCohortExit TRUE, individual's follow censored cohort exit outcomeCensorOnDate NULL, individual's follow censored given date outcomeFollowUpDays Number days follow individuals (lower bound 1, upper bound Inf) competingOutcomeCohortTable outcome cohort table interest. competingOutcomeCohortId ID event cohorts include. one outcome (one ID) can considered. competingOutcomeDateVariable Variable containing date competing outcome event competingOutcomeWashout Washout time days competing outcome competingOutcomeCensorOnCohortExit TRUE, individual's follow censored cohort exit competingOutcomeCensorOnDate NULL, individual's follow censored given date competingOutcomeFollowUpDays Number days follow individuals (lower bound 1, upper bound Inf)","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCompetingRiskCohortSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add competing risk survival information to a cohort table — addCompetingRiskCohortSurvival","text":"Two additional columns added x. \"time\" column contain number days censoring. \"status\" column indicate whether patient outcome event (value: 1), competing event (value:2) event/censored (value: 0)","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCompetingRiskCohortSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add competing risk survival information to a cohort table — addCompetingRiskCohortSurvival","text":"","code":"# \\donttest{  cdm <- mockMGUS2cdm() crsurvivaldata <- cdm$mgus_diagnosis %>%   addCompetingRiskCohortSurvival(     cdm = cdm,     outcomeCohortTable = \"progression\",     outcomeCohortId = 1,     competingOutcomeCohortTable = \"death_cohort\",     competingOutcomeCohortId = 1   )   # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":null,"dir":"Reference","previous_headings":"","what":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"tidy implementation summarised_characteristics object.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"","code":"asSurvivalResult(result)"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"result summarised_characteristics object.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"tibble tidy version summarised_characteristics object.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() #> ■■■■■■■■■■■■■■■■■■■■■■■■■         80% | ETA:  1s surv <- estimateSingleEventSurvival(   cdm = cdm,   targetCohortTable = \"mgus_diagnosis\",   targetCohortId = 1,   outcomeCohortTable = \"death_cohort\",   outcomeCohortId = 1,   eventGap = 7 ) %>%   asSurvivalResult() #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'death_cohort' #> Getting overall estimates # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"Estimate survival given event competing risk interest using cohorts OMOP Common Data Model","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"","code":"estimateCompetingRiskSurvival(   cdm,   targetCohortTable,   outcomeCohortTable,   competingOutcomeCohortTable,   targetCohortId = NULL,   outcomeCohortId = NULL,   outcomeDateVariable = \"cohort_start_date\",   outcomeWashout = Inf,   competingOutcomeCohortId = NULL,   competingOutcomeDateVariable = \"cohort_start_date\",   competingOutcomeWashout = Inf,   censorOnCohortExit = FALSE,   censorOnDate = NULL,   followUpDays = Inf,   strata = NULL,   eventGap = 30,   estimateGap = 1,   restrictedMeanFollowUp = NULL,   minimumSurvivalDays = 1,   minCellCount = 5 )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"cdm CDM reference targetCohortTable targetCohortTable outcomeCohortTable outcome cohort table interest. competingOutcomeCohortTable competing outcome cohort table interest. targetCohortId targetCohortId outcomeCohortId ID event cohorts include. one outcome (one ID) can considered. outcomeDateVariable Variable containing date outcome event outcomeWashout Washout time days outcome competingOutcomeCohortId ID event cohorts include. one competing outcome (one ID) can considered. competingOutcomeDateVariable Variable containing date competing outcome event competingOutcomeWashout Washout time days competing outcome censorOnCohortExit TRUE, individual's follow censored cohort exit censorOnDate NULL, individual's follow censored given date followUpDays Number days follow individuals (lower bound 1, upper bound Inf) strata strata eventGap Days time points report survival events, grouped specified intervals. estimateGap Days time points report survival estimates. First day day zero risk estimates provided times end follow-, gap days equivalent eventGap. restrictedMeanFollowUp number days follow-take account calculating restricted mean cohorts minimumSurvivalDays Minimum number days required main cohort survived minCellCount minimum number events reported, results obscured. 0, results reported.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"tibble survival information desired cohort, including: time, people risk, survival probability, cumulative incidence, 95 CIs, strata outcome. tibble number events outputted attribute output","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() surv <- estimateCompetingRiskSurvival(   cdm = cdm,   targetCohortTable = \"mgus_diagnosis\",   targetCohortId = 1,   outcomeCohortTable = \"progression\",   outcomeCohortId = 1,   competingOutcomeCohortTable = \"death_cohort\",   competingOutcomeCohortId = 1,   eventGap = 7 ) #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'progression' with competing outcome cohort 'death_cohort' #> Getting overall estimates # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"Estimate survival given event interest using cohorts OMOP Common Data Model","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"","code":"estimateSingleEventSurvival(   cdm,   targetCohortTable,   outcomeCohortTable,   targetCohortId = NULL,   outcomeCohortId = NULL,   outcomeDateVariable = \"cohort_start_date\",   outcomeWashout = Inf,   censorOnCohortExit = FALSE,   censorOnDate = NULL,   followUpDays = Inf,   strata = NULL,   eventGap = 30,   estimateGap = 1,   restrictedMeanFollowUp = NULL,   minimumSurvivalDays = 1,   minCellCount = 5 )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"cdm CDM reference targetCohortTable targetCohortTable outcomeCohortTable outcome cohort table interest. targetCohortId targetCohortId outcomeCohortId ID event cohorts include. one outcome (one ID) can considered. outcomeDateVariable Variable containing date outcome event outcomeWashout Washout time days outcome censorOnCohortExit TRUE, individual's follow censored cohort exit censorOnDate NULL, individual's follow censored given date followUpDays Number days follow individuals (lower bound 1, upper bound Inf) strata strata eventGap Days time points report survival events, grouped specified intervals. estimateGap Days time points report survival estimates. First day day zero risk estimates provided times end follow-, gap days equivalent eventGap. restrictedMeanFollowUp number days follow-take account calculating restricted mean cohorts minimumSurvivalDays Minimum number days required main cohort survived minCellCount minimum number events reported, results obscured. 0, results reported.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"tibble survival information desired cohort, including: time, people risk, survival probability, cumulative incidence, 95 CIs, strata outcome. tibble number events outputted attribute output","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() #> ■■■■■■■■■■■■■■■■■■■■■■■■■         80% | ETA:  1s surv <- estimateSingleEventSurvival(   cdm = cdm,   targetCohortTable = \"mgus_diagnosis\",   targetCohortId = 1,   outcomeCohortTable = \"death_cohort\",   outcomeCohortId = 1,   eventGap = 7 ) #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'death_cohort' #> Getting overall estimates # }"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/generateDeathCohortSet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To create a death cohort — generateDeathCohortSet","text":"","code":"generateDeathCohortSet(cdm, name, cohortTable = NULL, cohortId = NULL)"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/generateDeathCohortSet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To create a death cohort — generateDeathCohortSet","text":"cdm CDM reference name name created death cohort table cohortTable name cohort table create death cohort cohortId name cohort table create death cohort ","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/generateDeathCohortSet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To create a death cohort — generateDeathCohortSet","text":"cohort table death cohort cdm","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/generateDeathCohortSet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To create a death cohort — generateDeathCohortSet","text":"","code":"# \\donttest{ library(CDMConnector) library(CohortSurvival) observation_period <- dplyr::tibble(   observation_period_id = c(1, 2, 3, 4, 5,6),   person_id = c(1, 2, 3, 4, 5,6),   observation_period_start_date = c(     rep(as.Date(\"1980-07-20\"),6)   ),   observation_period_end_date = c(     rep(as.Date(\"2023-05-20\"),6)   ),   period_type_concept_id = c(rep(0,6)) )  deathTable <- dplyr::tibble(   person_id = c(1,2,3),   death_date = c(as.Date(\"2020-01-01\"),                  as.Date(\"2020-01-02\"),                  as.Date(\"2020-01-01\")))  person <- dplyr::tibble(   person_id = c(1, 2, 3, 4, 5),   year_of_birth = c(rep(\"1990\", 5)),   month_of_birth = c(rep(\"02\", 5)),   day_of_birth = c(rep(\"11\", 5)),   gender_concept_id = c(rep(0,5)),   ethnicity_concept_id = c(rep(0,5)),   race_concept_id = c(rep(0,5)) )  cdm <- omopgenerics::cdmFromTables(   tables = list(     person = person,     observation_period = observation_period,     death = deathTable   ),   cdmName = \"mock_es\" ) #> Warning: ! 7 column in person do not match expected column type: #> • `person_id` is numeric but expected integer #> • `year_of_birth` is character but expected integer #> • `month_of_birth` is character but expected integer #> • `day_of_birth` is character but expected integer #> • `gender_concept_id` is numeric but expected integer #> • `ethnicity_concept_id` is numeric but expected integer #> • `race_concept_id` is numeric but expected integer #> Warning: ! 3 column in observation_period do not match expected column type: #> • `observation_period_id` is numeric but expected integer #> • `person_id` is numeric but expected integer #> • `period_type_concept_id` is numeric but expected integer #> Warning: ! 1 column in death do not match expected column type: #> • `person_id` is numeric but expected integer  db <- DBI::dbConnect(duckdb::duckdb(), \":memory:\") cdm2 = CDMConnector::copy_cdm_to(db,                                  cdm,                                  schema = \"main\") #> Warning: ! 7 column in person do not match expected column type: #> • `person_id` is numeric but expected integer #> • `year_of_birth` is character but expected integer #> • `month_of_birth` is character but expected integer #> • `day_of_birth` is character but expected integer #> • `gender_concept_id` is numeric but expected integer #> • `ethnicity_concept_id` is numeric but expected integer #> • `race_concept_id` is numeric but expected integer #> Warning: ! 3 column in observation_period do not match expected column type: #> • `observation_period_id` is numeric but expected integer #> • `person_id` is numeric but expected integer #> • `period_type_concept_id` is numeric but expected integer  attr(cdm2, \"cdm_schema\") <- \"main\" attr(cdm2, \"write_schema\") <- \"main\"  cdm2 <- generateDeathCohortSet(cdm=cdm2,                                name = \"death_cohort\") #> Warning: `generateDeathCohortSet()` was deprecated in CohortSurvival 0.6.0. #> Warning: ! 1 column in death_cohort do not match expected column type: #> • `subject_id` is numeric but expected integer # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/mockMGUS2cdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","title":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","text":"Create mock CDM reference survival::mgus2 dataset","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/mockMGUS2cdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","text":"","code":"mockMGUS2cdm()"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/mockMGUS2cdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","text":"CDM reference containing data survival::mgus2 dataset","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/mockMGUS2cdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() cdm$person #> # Source:   table<main.person> [?? x 7] #> # Database: DuckDB v1.1.2 [unknown@Linux 6.5.0-1025-azure:R 4.4.2/:memory:] #>    person_id gender_concept_id year_of_birth month_of_birth day_of_birth #>        <int>             <int>         <int>          <int>        <int> #>  1         1              8532          1893              1            1 #>  2         2              8532          1890              1            1 #>  3         3              8507          1886              1            1 #>  4         4              8507          1909              1            1 #>  5         5              8532          1883              1            1 #>  6         6              8507          1900              1            1 #>  7         7              8532          1885              1            1 #>  8         8              8532          1887              1            1 #>  9         9              8532          1908              1            1 #> 10        10              8532          1902              1            1 #> # ℹ more rows #> # ℹ 2 more variables: race_concept_id <int>, ethnicity_concept_id <int> # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/optionsTableSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Additional arguments for the function tableSurvival() — optionsTableSurvival","title":"Additional arguments for the function tableSurvival() — optionsTableSurvival","text":"provides list allowed inputs .option argument tableSurvival given default value.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/optionsTableSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additional arguments for the function tableSurvival() — optionsTableSurvival","text":"","code":"optionsTableSurvival()"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/optionsTableSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Additional arguments for the function tableSurvival() — optionsTableSurvival","text":"default .options named list.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/optionsTableSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Additional arguments for the function tableSurvival() — optionsTableSurvival","text":"","code":"{ optionsTableSurvival() } #> $decimals #>    integer percentage    numeric proportion  #>          0          2          2          2  #>  #> $decimalMark #> [1] \".\" #>  #> $bigMark #> [1] \",\" #>  #> $delim #> [1] \"\\n\" #>  #> $includeHeaderName #> [1] TRUE #>  #> $includeHeaderKey #> [1] TRUE #>  #> $style #> [1] \"default\" #>  #> $na #> [1] \"-\" #>  #> $title #> NULL #>  #> $subtitle #> NULL #>  #> $caption #> NULL #>  #> $groupAsColumn #> [1] FALSE #>  #> $groupOrder #> NULL #>  #> $merge #> [1] \"all_columns\" #>"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot survival results — plotSurvival","title":"Plot survival results — plotSurvival","text":"Plot survival results","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot survival results — plotSurvival","text":"","code":"plotSurvival(   result,   x = \"time\",   xscale = \"days\",   ylim = c(0, NA),   xlim = NULL,   cumulativeFailure = FALSE,   ribbon = TRUE,   facet = NULL,   colour = NULL,   riskTable = FALSE,   riskInterval = 30 )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot survival results — plotSurvival","text":"result Survival results x Variable plot x axis xscale X axis scale. Can \"days\" \"years\". ylim Limits Y axis xlim Limits X axis cumulativeFailure whether plot cumulative failure probability instead survival probability ribbon TRUE, plot join points using ribbon facet Variables use facets colour Variables use colours riskTable Whether print risk table plot riskInterval Interval time print risk table plot","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot survival results — plotSurvival","text":"plot survival probabilities time","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot survival results — plotSurvival","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() surv <- estimateSingleEventSurvival(cdm,                                     targetCohortTable = \"mgus_diagnosis\",                                     outcomeCohortTable = \"death_cohort\") #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'death_cohort' #> Getting overall estimates plotSurvival(surv)  # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. omopgenerics attrition, bind, cohortCodelist, cohortCount, exportSummarisedResult, importSummarisedResult, settings, suppress","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Table with survival summary — tableSurvival","title":"Table with survival summary — tableSurvival","text":"Table survival summary","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table with survival summary — tableSurvival","text":"","code":"tableSurvival(   x,   times = NULL,   timeScale = \"days\",   splitStrata = TRUE,   header = c(\"estimate\"),   type = \"gt\",   groupColumn = NULL,   .options = list() )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table with survival summary — tableSurvival","text":"x Result estimateSingleEventSurvival estimateCompetingRiskSurvival times Times report survival summary table timeScale Time unit report survival : days, months years splitStrata TRUE strata split columns, otherwise \"strata_name\" \"strata_level\" columns kept. header vector containing elements go header. Allowed : cdm_name, group, strata, additional, variable, estimate, settings. type Type desired formatted table, possibilities: \"gt\", \"flextable\",  \"tibble\". groupColumn Columns use group labels. .options Named list additional formatting options. CohortSurvival::optionsTableSurvival() shows allowed arguments default values.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table with survival summary — tableSurvival","text":"tibble containing summary observed survival required units","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table with survival summary — tableSurvival","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() surv <- estimateSingleEventSurvival(cdm,                                     targetCohortTable = \"mgus_diagnosis\",                                     outcomeCohortTable = \"death_cohort\") #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'death_cohort' #> Getting overall estimates tableSurvival(surv, times = c(50,100,365)) #> Warning: The `split` argument of `visOmopTable()` is deprecated as of visOmopResults #> 0.4.0. #> ℹ The deprecated feature was likely used in the CohortSurvival package. #>   Please report the issue to the authors.     CDM name       Target cohort       Outcome name                Estimate name            Number records       Number events       Median survival (95% CI)       Restricted mean survival (SE)       50 days survival estimate       100 days survival estimate       365 days survival estimate     mock mgus_diagnosis death_cohort 1,384 963 98.00 (92.00, 103.00) 133.00 (4.00) 69.67 (67.28, 72.13) 48.50 (45.87, 51.29) 6.84 (3.36, 13.92)# }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tidyeval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy eval helpers — tidyeval","text":"return value, called side effects","code":""}]
