[{"path":[]},{"path":"https://darwin-eu.github.io/CohortSurvival/CONTRIBUTING.html","id":"filing-issues","dir":"","previous_headings":"","what":"Filing issues","title":"Contributing to CohortSurvival","text":"found bug, question, want suggest new feature please open issue. reporting bug, reprex much appreciated. contributing either documentation code, please make sure open issue beforehand identify needs done .","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/CONTRIBUTING.html","id":"contributing-code-or-documentation","dir":"","previous_headings":"","what":"Contributing code or documentation","title":"Contributing to CohortSurvival","text":"package developed part DARWIN EU(R) project closed external contributions.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/CONTRIBUTING.html","id":"documenting-the-package","dir":"","previous_headings":"Contributing code or documentation","what":"Documenting the package","title":"Contributing to CohortSurvival","text":"Run update check package documentation: Note devtools::check_man() return warnings. commit limited package documentation, running sufficient (although running devtools::check() always generally good idea submitting pull request).","code":"devtools::document() devtools::run_examples() devtools::build_readme() devtools::build_vignettes() devtools::check_man()"},{"path":"https://darwin-eu.github.io/CohortSurvival/CONTRIBUTING.html","id":"run-tests","dir":"","previous_headings":"Contributing code or documentation","what":"Run tests","title":"Contributing to CohortSurvival","text":"starting contribute code, first make sure package tests passing. raise issue going (although please first make sure packages imports suggests installed). contribute code, make sure current tests add continue pass. package tests can run together : Code add new functionality accompanied tests. Code coverage can checked using:","code":"devtools::test() # note, you may first have to detach the package # detach(\"package:CohortSurvival\", unload=TRUE) devtools::test_coverage()"},{"path":"https://darwin-eu.github.io/CohortSurvival/CONTRIBUTING.html","id":"adhere-to-code-style","dir":"","previous_headings":"Contributing code or documentation","what":"Adhere to code style","title":"Contributing to CohortSurvival","text":"Please adhere code style adding new code. though restyle code unrelated pull request make code review difficult.","code":"lintr::lint_package(\".\",                     linters = lintr::linters_with_defaults(                       lintr::object_name_linter(styles = \"camelCase\")                     ) )"},{"path":"https://darwin-eu.github.io/CohortSurvival/CONTRIBUTING.html","id":"run-check-before-opening-a-pull-request","dir":"","previous_headings":"Contributing code or documentation","what":"Run check() before opening a pull request","title":"Contributing to CohortSurvival","text":"opening pull request please make sure run: warnings seen.","code":"devtools::check()"},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Single outcome event of interest","text":"Let us first load packages required. create cdm reference containing example MGUS2 survival dataset. practice use CDMConnector package connect data mapped OMOP CDM. mgus2 dataset contains survival data 1341 sequential patients monoclonal gammopathy undetermined significance (MGUS), converted OMOP CDM one package survival. information see ?survival::mgus2 . vignette first estimate survival following diagnosis MGUS, death primary outcome interest. study typically need first define study cohorts , starting analysis, case example data already cohorts available: mgus_diagnosis target cohort death_cohort outcome cohort. target cohort also number additional features (age sex patients, instance) recorded, use stratification. Let us first take quick look data working :","code":"library(CDMConnector) library(CohortSurvival) library(dplyr) library(ggplot2) cdm <- CohortSurvival::mockMGUS2cdm() cdm$mgus_diagnosis %>%    glimpse() #> Rows: ?? #> Columns: 10 #> Database: DuckDB v1.2.1 [unknown@Linux 6.8.0-1021-azure:R 4.4.3/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15… #> $ cohort_start_date    <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ cohort_end_date      <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ age                  <dbl> 88, 78, 94, 68, 90, 90, 89, 87, 86, 79, 86, 89, 8… #> $ sex                  <fct> F, F, M, M, F, M, F, F, F, F, M, F, M, F, M, F, F… #> $ hgb                  <dbl> 13.1, 11.5, 10.5, 15.2, 10.7, 12.9, 10.5, 12.3, 1… #> $ creat                <dbl> 1.30, 1.20, 1.50, 1.20, 0.80, 1.00, 0.90, 1.20, 0… #> $ mspike               <dbl> 0.5, 2.0, 2.6, 1.2, 1.0, 0.5, 1.3, 1.6, 2.4, 2.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \">=70\", \">=70\", \">…  cdm$death_cohort %>%    glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.2.1 [unknown@Linux 6.8.0-1021-azure:R 4.4.3/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1… #> $ cohort_start_date    <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, … #> $ cohort_end_date      <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, …"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"overall-survival","dir":"Articles","previous_headings":"","what":"Overall survival","title":"Single outcome event of interest","text":"estimate survival need call estimateSingleEventSurvival() function. give us necessary results assess survival whole target cohort. Note output function summarised_result format. information type object, check documentation package omopgenerics. allow us use functions packages work summarised_result objects, instance, plotting visualising output. Alternatively, can convert output intuitive format prefer use tools. Let us first produce overall results. Note minimal amount inputs necessary function cdm object names target outcome cohorts, must cohort tables cdm provided. main output summarised_result object usual columns. information retrieved estimation process (estimates, events, summary attrition) stored main output table, MGUS_death, settings attribute provides information different result types available. can check settings() function omopgenerics. advantage working summarised_result object can join results results packages like IncidencePrevalence CohortCharacteristics view together Shiny App. main visualisation functions package also work summarised_result object. instance, wish plot survival estimates can run following line code:  can also decide add basic risk table underneath plot, setting argument riskTable = TRUE.  plotting function parameters can tuned. instance, can plot cumulative failure instead survival probability asking cumulativeFailure = TRUE. can check plotting options ?plotSurvival.   output function plotSurvival ggplot, user can also change aspects plot manually adding ggplot lines code plot . instance, can switch plot axes:  Apart survival estimates retrieved, main output also contains information survival events, summary attrition. different functions package can use present information tidy way. function tableSurvival() provides survival summary. includes number records (people target cohort), number events (people experience outcome event target cohort), median survival restricted mean survival available. provided combinations target outcome cohorts stratifications available result. Note less 50% people target cohort experience event, median survival reported (.e. output NA(NA,NA)). Note, additionally, restricted mean survival reported whole study period (long follow available) default, unless asked otherwise. Therefore, restrictedMeanFollowUp = NULL provide result follow long available. parameter can changed main estimation function, user wants . parameter set number greater follow available, summary table display NA value. instance, ask restricted mean follow 2 years target cohort can follow 300 days, tableSurvival report Restricted mean survival NA. summary table function can also report survival requested times. instance, might want know survival estimates cohort 30, 90 180 days. : ask survival estimate available, function return . instance, case, follow available 500 days, : options table include giving estimates years instead days. Check ?tableSurvival additional options included function parameters. One special input called .options, allows user ask variety additional formatting choices. see list options, can call optionsTableSurvival : , instance, want add title table also change decimal mark “,” big mark “.”, call: Another function provides tabular results riskTable. may use want tidy presentation number people risk, number people experiencing event, number people censored, point time available. Note timepoints ones provided estimation function, default eventGap = 30, every 30 days. can change parameter stage want aggregated events smaller bigger interval. options table similar ones tableSurvival.","code":"MGUS_death <- estimateSingleEventSurvival(   cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"death_cohort\" ) MGUS_death %>%    glimpse() #> Rows: 1,354 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock… #> $ group_name       <chr> \"target_cohort\", \"target_cohort\", \"target_cohort\", \"t… #> $ group_level      <chr> \"mgus_diagnosis\", \"mgus_diagnosis\", \"mgus_diagnosis\",… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"outcome\", \"outcome\", \"outcome\", \"outcome\", \"outcome\"… #> $ variable_level   <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"deat… #> $ estimate_name    <chr> \"estimate\", \"estimate_95CI_lower\", \"estimate_95CI_upp… #> $ estimate_type    <chr> \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\"… #> $ estimate_value   <chr> \"1\", \"1\", \"1\", \"0.9697\", \"0.9607\", \"0.9787\", \"0.9494\"… #> $ additional_name  <chr> \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time… #> $ additional_level <chr> \"0\", \"0\", \"0\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"3\", \"3\"… class(MGUS_death) #> [1] \"summarised_result\" \"omop_result\"       \"tbl_df\"            #> [4] \"tbl\"               \"data.frame\" settings(MGUS_death) #> # A tibble: 4 × 18 #>   result_id result_type     package_name package_version group strata additional #>       <int> <chr>           <chr>        <chr>           <chr> <chr>  <chr>      #> 1         1 survival_proba… CohortSurvi… 1.0.0           targ… \"\"     \"time\"     #> 2         2 survival_events CohortSurvi… 1.0.0           targ… \"\"     \"time\"     #> 3         3 survival_summa… CohortSurvi… 1.0.0           targ… \"\"     \"\"         #> 4         4 survival_attri… CohortSurvi… 1.0.0           targ… \"reas… \"reason_i… #> # ℹ 11 more variables: min_cell_count <chr>, analysis_type <chr>, #> #   censor_on_cohort_exit <chr>, competing_outcome <chr>, eventgap <chr>, #> #   follow_up_days <chr>, group_level <chr>, minimum_survival_days <chr>, #> #   outcome <chr>, outcome_date_variable <chr>, outcome_washout <chr> plotSurvival(MGUS_death) plotSurvival(MGUS_death, riskTable = TRUE) plotSurvival(MGUS_death, ribbon = FALSE) plotSurvival(MGUS_death, cumulativeFailure = TRUE) plotSurvival(MGUS_death) + theme_bw() + ggtitle(\"Plot survival\") + coord_flip() tableSurvival(MGUS_death) tableSurvival(MGUS_death, times = c(30,90,180)) tableSurvival(MGUS_death, times = c(30,90,180, 500)) tableSurvival(MGUS_death, times = c(1,2), timeScale = \"years\") optionsTableSurvival() #> $decimals #>    integer percentage    numeric proportion  #>          0          2          2          2  #>  #> $decimalMark #> [1] \".\" #>  #> $bigMark #> [1] \",\" #>  #> $delim #> [1] \"\\n\" #>  #> $includeHeaderName #> [1] TRUE #>  #> $includeHeaderKey #> [1] TRUE #>  #> $style #> [1] \"default\" #>  #> $na #> [1] \"-\" #>  #> $title #> NULL #>  #> $subtitle #> NULL #>  #> $caption #> NULL #>  #> $groupAsColumn #> [1] FALSE #>  #> $groupOrder #> NULL #>  #> $merge #> [1] \"all_columns\" tableSurvival(MGUS_death, .options = list(title = \"Survival summary\",                                           decimalMark = \",\",                                           bigMark = \".\")) riskTable(MGUS_death)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"survival-format","dir":"Articles","previous_headings":"","what":"Survival format","title":"Single outcome event of interest","text":"working survival study, want manually inspect result tables, might want put easier format work . Note, however, visualisation functions package work new result format. function asSurvivalResult() allows us convert result survival format, main table containing estimates information events, summary attrition stored attributes. can now directly check estimates times 10 15, instance, like :","code":"# Transforming the output to a survival result format MGUS_death_survresult <- MGUS_death %>%    asSurvivalResult()  MGUS_death_survresult %>%   glimpse() #> Rows: 425 #> Columns: 10 #> $ cdm_name            <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"m… #> $ target_cohort       <chr> \"mgus_diagnosis\", \"mgus_diagnosis\", \"mgus_diagnosi… #> $ outcome             <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"d… #> $ competing_outcome   <chr> \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"n… #> $ variable            <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"d… #> $ time                <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, … #> $ result_type         <chr> \"survival_probability\", \"survival_probability\", \"s… #> $ estimate            <dbl> 1.0000, 0.9697, 0.9494, 0.9386, 0.9270, 0.9198, 0.… #> $ estimate_95CI_lower <dbl> 1.0000, 0.9607, 0.9379, 0.9260, 0.9134, 0.9056, 0.… #> $ estimate_95CI_upper <dbl> 1.0000, 0.9787, 0.9610, 0.9513, 0.9408, 0.9342, 0.… # Events, attrition and summary are now attributes of the result object attr(MGUS_death_survresult,\"events\") %>%   glimpse() #> Rows: 16 #> Columns: 10 #> $ cdm_name          <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"moc… #> $ target_cohort     <chr> \"mgus_diagnosis\", \"mgus_diagnosis\", \"mgus_diagnosis\"… #> $ outcome           <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"dea… #> $ competing_outcome <chr> \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"non… #> $ variable          <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"dea… #> $ time              <dbl> 0, 30, 60, 90, 120, 150, 180, 210, 240, 270, 300, 33… #> $ eventgap          <chr> \"30\", \"30\", \"30\", \"30\", \"30\", \"30\", \"30\", \"30\", \"30\"… #> $ n_risk            <dbl> 1384, 1104, 895, 652, 438, 299, 187, 109, 61, 31, 16… #> $ n_events          <dbl> 0, 285, 182, 167, 131, 86, 57, 20, 15, 11, 4, 3, 1, … #> $ n_censor          <dbl> 0, 3, 27, 79, 74, 54, 54, 58, 33, 18, 10, 6, 3, 1, 1… attr(MGUS_death_survresult,\"summary\") %>%   glimpse() #> Rows: 1 #> Columns: 24 #> $ cdm_name                    <chr> \"mock\" #> $ target_cohort               <chr> \"mgus_diagnosis\" #> $ outcome                     <chr> \"death_cohort\" #> $ competing_outcome           <chr> \"none\" #> $ variable                    <chr> \"death_cohort\" #> $ number_records              <dbl> 1384 #> $ n_events                    <dbl> 963 #> $ restricted_mean_survival    <dbl> 133 #> $ restricted_mean_survival_se <dbl> 4 #> $ median_survival             <dbl> 98 #> $ median_survival_95CI_lower  <dbl> 92 #> $ median_survival_95CI_higher <dbl> 103 #> $ q0_survival                 <dbl> 0 #> $ q0_survival_95CI_lower      <dbl> 0 #> $ q0_survival_95CI_higher     <dbl> 0 #> $ q25_survival                <dbl> 41 #> $ q25_survival_95CI_lower     <dbl> 35 #> $ q25_survival_95CI_higher    <dbl> 46 #> $ q75_survival                <dbl> 189 #> $ q75_survival_95CI_lower     <dbl> 173 #> $ q75_survival_95CI_higher    <dbl> 214 #> $ q100_survival               <dbl> 424 #> $ q100_survival_95CI_lower    <dbl> NA #> $ q100_survival_95CI_higher   <dbl> NA attr(MGUS_death_survresult,\"attrition\") %>%   glimpse() #> Rows: 12 #> Columns: 7 #> $ cdm_name          <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"moc… #> $ target_cohort     <chr> \"mgus_diagnosis_1\", \"mgus_diagnosis_1\", \"mgus_diagno… #> $ outcome           <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"dea… #> $ competing_outcome <chr> \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"non… #> $ reason            <chr> \"Initial qualifying events\", \"Initial qualifying eve… #> $ variable_name     <chr> \"number_records\", \"number_subjects\", \"excluded_recor… #> $ count             <int> 1384, 1384, 0, 0, 1384, 1384, 0, 0, 1384, 1384, 0, 0 MGUS_death_survresult %>%   filter(time %in% c(10:15)) #> # A tibble: 6 × 10 #>   cdm_name target_cohort  outcome   competing_outcome variable  time result_type #>   <chr>    <chr>          <chr>     <chr>             <chr>    <dbl> <chr>       #> 1 mock     mgus_diagnosis death_co… none              death_c…    10 survival_p… #> 2 mock     mgus_diagnosis death_co… none              death_c…    11 survival_p… #> 3 mock     mgus_diagnosis death_co… none              death_c…    12 survival_p… #> 4 mock     mgus_diagnosis death_co… none              death_c…    13 survival_p… #> 5 mock     mgus_diagnosis death_co… none              death_c…    14 survival_p… #> 6 mock     mgus_diagnosis death_co… none              death_c…    15 survival_p… #> # ℹ 3 more variables: estimate <dbl>, estimate_95CI_lower <dbl>, #> #   estimate_95CI_upper <dbl>"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"changing-estimation-parameters","dir":"Articles","previous_headings":"","what":"Changing estimation parameters","title":"Single outcome event of interest","text":"far seen estimate survival whole cohort default settings, easily inspect present results. main function, estimateSingleEventSurvival(), many input parameters can change provide results targeted needs. can check options, usual, ?estimateSingleEventSurvival. comment options section. default, outcomeWashout set Inf, means include people outcome index date (defined entry target cohort). can change ask, instance, people excluded estimation 30 day washout period instead. case, write estimateSingleEventSurvival(cdm, \"mgus_diagnosis\", \"death_cohort\", outcomeWashout = 30). options include requiring minimum number survival days (default set minimumSurvivalDays = 1) cutting follow-certain amount time (default set followUpDays = Inf, .e. much follow available). might want retrieve event information smaller interval default, every 30 days. Note use usual exporting functions omopgenerics, small numbers suppressed. can changed, likely report small counts anyway. Bigger intervals allow aggregated counts tend bigger. Note need specify event gap want plotting function. change estimation output, change plot accordingly (either eventGap number multiple, like following plot).","code":"MGUS_death_gap7 <- estimateSingleEventSurvival(cdm, \"mgus_diagnosis\", \"death_cohort\", eventGap = 7) plotSurvival(MGUS_death_gap7, riskTable = TRUE, riskInterval = 14)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"with-stratification","dir":"Articles","previous_headings":"","what":"With stratification","title":"Single outcome event of interest","text":"One important parameters might interested using strata one. estimate survival particular strata interest need features added target cohort table, columns. Therefore, instance, want stratify estimation sex, need column named sex necessary information target cohort interest. mgus example, already number cohort characteristics added diagnosis cohort. want stratify age group, sex, time, following: previous potential changes parameters, well different visualisation options, still apply case. Therefore, can get summary table using tableSurvival, now row strata: plot results property, specify faceting colouring options. One choice separate plots sex display different age groups one :  can add respective risk tables plot well.  density information tables, sometimes visualisation ideal. might need export plot image directly computer specify size big enough display tables properly. facetting plots, user can post-process default graphic customise facets. Next show default facets obtained “age_group” “sex” levels.  Next, create customised facets using functions ggplot2 package. set “age_group” columns “sex” rows:","code":"MGUS_death_strata <- estimateSingleEventSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"death_cohort\",   strata = list(c(\"age_group\"),                 c(\"sex\"),                 c(\"age_group\", \"sex\")) ) tableSurvival(MGUS_death_strata) plotSurvival(MGUS_death_strata,              facet = \"sex\",              colour = \"age_group\") plotSurvival(MGUS_death_strata,              colour = c(\"age_group\", \"sex\"),              riskTable = TRUE) plotSurvival(MGUS_death_strata, facet = c(\"age_group\", \"sex\")) plotSurvival(MGUS_death_strata) +   facet_grid(rows = vars(sex), cols = vars(age_group))"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"multiple-target-or-outcome-cohorts","dir":"Articles","previous_headings":"","what":"Multiple target or outcome cohorts","title":"Single outcome event of interest","text":"Sometimes might want estimate survival multiple targets /outcomes. sake example, let us use cohort people diagnosed progression multiple myeloma, saved mgus2 dataset name progression, additional target cohort. can use death_cohort survival outcome. estimateSingleSurvival function allow different tables passed target outcome cohorts. additional target another table, like case, need estimate survival separate call group results posteriori using function bind omopgenerics: main output now information target cohorts, can see settings table. can check summary table plot estimates coloured target cohort like :  alternative running estimation function twice (create) table target outcome cohorts together, one different cohort_definition_id. , estimateSingleEventSurvival automatically run estimation process combinations target outcome cohorts available, produce independent results. Imagine, case, want estimate time event people mgus diagnosis outcomes, progression multiple myeloma death. need unite outcome tables one, can manually using function bind omopgenerics: Now can use new outcome_cohorts table outcome table get results analyses. Likewise, can check summary plot outcomes:","code":"MM_death <- estimateSingleEventSurvival(cdm, \"progression\", \"death_cohort\") MGUS_MM_death <- bind(MGUS_death, MM_death) settings(MGUS_MM_death) #> # A tibble: 8 × 18 #>   result_id result_type     package_name package_version group strata additional #>       <int> <chr>           <chr>        <chr>           <chr> <chr>  <chr>      #> 1         1 survival_proba… CohortSurvi… 1.0.0           targ… \"\"     \"time\"     #> 2         2 survival_events CohortSurvi… 1.0.0           targ… \"\"     \"time\"     #> 3         3 survival_summa… CohortSurvi… 1.0.0           targ… \"\"     \"\"         #> 4         4 survival_attri… CohortSurvi… 1.0.0           targ… \"reas… \"reason_i… #> 5         5 survival_proba… CohortSurvi… 1.0.0           targ… \"\"     \"time\"     #> 6         6 survival_events CohortSurvi… 1.0.0           targ… \"\"     \"time\"     #> 7         7 survival_summa… CohortSurvi… 1.0.0           targ… \"\"     \"\"         #> 8         8 survival_attri… CohortSurvi… 1.0.0           targ… \"reas… \"reason_i… #> # ℹ 11 more variables: min_cell_count <chr>, analysis_type <chr>, #> #   censor_on_cohort_exit <chr>, competing_outcome <chr>, eventgap <chr>, #> #   follow_up_days <chr>, group_level <chr>, minimum_survival_days <chr>, #> #   outcome <chr>, outcome_date_variable <chr>, outcome_washout <chr> tableSurvival(MGUS_MM_death) plotSurvival(MGUS_MM_death, colour = \"target_cohort\") cdm <- bind(cdm$progression, cdm$death_cohort, name = \"outcome_cohorts\") MGUS_death_prog <- estimateSingleEventSurvival(cdm, \"mgus_diagnosis\", \"outcome_cohorts\") tableSurvival(MGUS_death_prog) plotSurvival(MGUS_death_prog, colour = \"outcome\")"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"export-and-import-a-survival-output","dir":"Articles","previous_headings":"","what":"Export and import a survival output","title":"Single outcome event of interest","text":"survival output attributes can exported imported usual tools omopgenerics, also available exportable functions package. Therefore, export main output, usual parameters, need following: can read exporting importing summarised_result objects . Note results suppressed point CohortSurvival default. However, exporting results exportSummarisedResult, counts 5 turned NA. can changed parameter minCellCount. left , suppression done small counts, can see plotting result exporting importing. Note difference following risk table one plotted beginning vignette:","code":"x <- tempdir() exportSummarisedResult(MGUS_death, path = x, fileName = \"result.csv\") MGUS_death_imported <- importSummarisedResult(path = file.path(x, \"result.csv\")) plotSurvival(MGUS_death_imported, riskTable = TRUE)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a01_Single_event_of_interest.html","id":"disconnect-from-the-cdm-database-connection","dir":"Articles","previous_headings":"","what":"Disconnect from the cdm database connection","title":"Single outcome event of interest","text":"finish disconnecting cdm.","code":"cdmDisconnect(cdm)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a02_Competing_risk_survival.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Competing risk survival","text":"Let us first load packages required. create cdm reference use example MGUS2 survival dataset . practice use CDMConnector package connect data mapped OMOP CDM. proceed single event survival, time considering event interest (progression disease) competing risk (mortality). details provided single event survival vignette also valid study case: potential input changes estimation, different output formats available options table plot functions. Everything discussed previously also applicable adding competing outcome, show vignette. Therefore provide much detail possible combinations inputs , rather focus particularities estimating survival outcome competing outcome. Let us take glimpse three cohorts use time: mgus diagnosis target, death cohort progression multiple myeloma outcomes.","code":"library(CDMConnector) library(CohortSurvival) library(dplyr) library(ggplot2) cdm <- CohortSurvival::mockMGUS2cdm() cdm$mgus_diagnosis %>%    glimpse() #> Rows: ?? #> Columns: 10 #> Database: DuckDB v1.2.1 [unknown@Linux 6.8.0-1021-azure:R 4.4.3/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15… #> $ cohort_start_date    <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ cohort_end_date      <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ age                  <dbl> 88, 78, 94, 68, 90, 90, 89, 87, 86, 79, 86, 89, 8… #> $ sex                  <fct> F, F, M, M, F, M, F, F, F, F, M, F, M, F, M, F, F… #> $ hgb                  <dbl> 13.1, 11.5, 10.5, 15.2, 10.7, 12.9, 10.5, 12.3, 1… #> $ creat                <dbl> 1.30, 1.20, 1.50, 1.20, 0.80, 1.00, 0.90, 1.20, 0… #> $ mspike               <dbl> 0.5, 2.0, 2.6, 1.2, 1.0, 0.5, 1.3, 1.6, 2.4, 2.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \">=70\", \">=70\", \">…  cdm$death_cohort %>%    glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.2.1 [unknown@Linux 6.8.0-1021-azure:R 4.4.3/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1… #> $ cohort_start_date    <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, … #> $ cohort_end_date      <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, …  cdm$progression %>%   glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.2.1 [unknown@Linux 6.8.0-1021-azure:R 4.4.3/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 56, 81, 83, 111, 124, 127, 147, 163, 165, 167, 18… #> $ cohort_start_date    <date> 1978-01-30, 1985-01-15, 1974-08-17, 1993-01-14, … #> $ cohort_end_date      <date> 1978-01-30, 1985-01-15, 1974-08-17, 1993-01-14, …"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a02_Competing_risk_survival.html","id":"estimating-survival-with-competing-risk","dir":"Articles","previous_headings":"","what":"Estimating survival with competing risk","title":"Competing risk survival","text":"package allows estimate survival outcome competing risk outcome. can stratify, see information events summarise estimates, among others, way single event survival analysis. additional requirement specify competingOutcomeCohortTable argument. can see results outputted long format, transformed survival format. can plot results previous vignette:  summary table survival now row outcomes:","code":"MGUS_death_prog <- estimateCompetingRiskSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"progression\",   competingOutcomeCohortTable = \"death_cohort\" )   MGUS_death_prog %>%    asSurvivalResult() %>%    glimpse() #> Rows: 850 #> Columns: 10 #> $ cdm_name            <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"m… #> $ target_cohort       <chr> \"mgus_diagnosis\", \"mgus_diagnosis\", \"mgus_diagnosi… #> $ outcome             <chr> \"progression\", \"progression\", \"progression\", \"prog… #> $ competing_outcome   <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"d… #> $ variable            <chr> \"progression\", \"progression\", \"progression\", \"prog… #> $ time                <dbl> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, … #> $ result_type         <chr> \"cumulative_failure_probability\", \"cumulative_fail… #> $ estimate            <dbl> 0.0000, 0.0000, 0.0014, 0.0014, 0.0022, 0.0029, 0.… #> $ estimate_95CI_lower <dbl> 0.0000, NA, 0.0004, 0.0004, 0.0007, 0.0011, 0.0015… #> $ estimate_95CI_upper <dbl> 0.0000, NA, 0.0058, 0.0058, 0.0067, 0.0077, 0.0087… plotSurvival(MGUS_death_prog, cumulativeFailure = TRUE,              colour = \"variable\") +    theme(legend.position = \"top\") tableSurvival(MGUS_death_prog)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a02_Competing_risk_survival.html","id":"with-stratification","dir":"Articles","previous_headings":"","what":"With stratification","title":"Competing risk survival","text":", estimate survival particular strata interest need features added target cohort table. can give names strata columns estimating function like : well results strata, always also overall results returned. can filter output table plot results different strata levels, wish add overall cohort plot. can also ask cumulative failure probability plotted instead survival probability, makes sense competing outcome case.  also now summary statistics strata well overall.","code":"MGUS_death_prog <-  estimateCompetingRiskSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"progression\",   competingOutcomeCohortTable = \"death_cohort\",   strata = list(c(\"sex\")) ) plotSurvival(MGUS_death_prog %>%                 dplyr::filter(strata_name != \"Overall\"),               facet = \"sex\",              colour = \"variable\",              cumulativeFailure = TRUE) tableSurvival(MGUS_death_prog)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a02_Competing_risk_survival.html","id":"disconnect-from-the-cdm-database-connection","dir":"Articles","previous_headings":"","what":"Disconnect from the cdm database connection","title":"Competing risk survival","text":"always, finish disconnecting cdm.","code":"cdmDisconnect(cdm)"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a03_Further_survival_analyses.html","id":"set-up","dir":"Articles","previous_headings":"","what":"Set up","title":"Further survival analyses","text":"Let us first load packages required. create cdm reference use example MGUS2 survival dataset. CohortSurvival package implemented functionality complex survival analyses Kaplar Meier curves, like Cox Proportional Hazards modelling. However, format data inputted well-known modelling functions packages like survival cmprskcan retrieved OMOP data -built functions package. Let us see single event competing risk survival settings.","code":"library(CDMConnector) library(CohortSurvival) library(dplyr) library(cmprsk) library(survival) cdm <- CohortSurvival::mockMGUS2cdm()"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a03_Further_survival_analyses.html","id":"further-analysis-with-single-event-survival","dir":"Articles","previous_headings":"","what":"Further analysis with single event survival","title":"Further survival analyses","text":"get time status information need coxph function package survival, instance, need call addCohortSurvival. stratification variables need columns previously added cohort user. can decide change default parameters function. Information can found ?addCohortSurvival. instance, can choose exclude people outcome 180 days index date, instead anytime, follow one year. can also decide use cohort_end_date outcome variable censor particular date, instance, 1st January 1994. see gives us different results: table added time status information enough call advanced function, like aforementioned Cox Proportional Hazards model:","code":"input_survival_single <- cdm$mgus_diagnosis %>%        addCohortSurvival(        cdm = cdm,        outcomeCohortTable = \"death_cohort\",        outcomeCohortId = 1        )   input_survival_single %>%    glimpse() #> Rows: ?? #> Columns: 13 #> Database: DuckDB v1.2.1 [unknown@Linux 6.8.0-1021-azure:R 4.4.3/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 15, 16, 1… #> $ cohort_start_date    <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ cohort_end_date      <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ age                  <dbl> 88, 78, 94, 68, 90, 90, 89, 87, 79, 86, 89, 80, 8… #> $ sex                  <fct> F, F, M, M, F, M, F, F, F, M, F, F, M, F, F, M, M… #> $ hgb                  <dbl> 13.1, 11.5, 10.5, 15.2, 10.7, 12.9, 10.5, 12.3, 9… #> $ creat                <dbl> 1.30, 1.20, 1.50, 1.20, 0.80, 1.00, 0.90, 1.20, 1… #> $ mspike               <dbl> 0.5, 2.0, 2.6, 1.2, 1.0, 0.5, 1.3, 1.6, 2.3, 2.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \">=70\", \">=70\", \">… #> $ days_to_exit         <int> 30, 25, 46, 92, 8, 4, 151, 2, 136, 2, 108, 14, 18… #> $ status               <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ time                 <dbl> 30, 25, 46, 92, 8, 4, 151, 2, 136, 2, 108, 14, 18… cdm$mgus_diagnosis %>%        addCohortSurvival(        cdm = cdm,        outcomeCohortTable = \"death_cohort\",        outcomeWashout = 180,        followUpDays = 365        ) %>%   filter(cohort_start_date > \"1993-01-01\") %>%   glimpse() #> Rows: ?? #> Columns: 13 #> Database: DuckDB v1.2.1 [unknown@Linux 6.8.0-1021-azure:R 4.4.3/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 213, 1245, 1248, 1340, 1374, 1376, 1380, 1384, 94… #> $ cohort_start_date    <date> 1994-01-01, 1994-01-01, 1994-01-01, 1994-01-01, … #> $ cohort_end_date      <date> 1994-01-01, 1994-01-01, 1994-01-01, 1994-01-01, … #> $ age                  <dbl> 93, 82, 87, 67, 68, 67, 69, 79, 85, 81, 66, 86, 8… #> $ sex                  <fct> F, M, M, F, F, F, M, M, M, M, M, F, F, F, F, F, M… #> $ hgb                  <dbl> 12.8, 11.4, 12.7, 12.2, 9.2, 13.7, 15.0, 9.6, 13.… #> $ creat                <dbl> 1.1, 1.5, 1.5, 1.4, 1.8, 1.1, 0.8, 1.1, 1.1, 1.4,… #> $ mspike               <dbl> 0.8, 1.4, 0.5, 1.2, 0.5, 1.5, 0.0, 1.7, 1.5, 1.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \"<70\", \"<70\", \"<70… #> $ days_to_exit         <dbl> 19, 1, 10, 46, 40, 41, 22, 6, 12, 43, 31, 57, 52,… #> $ status               <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0… #> $ time                 <dbl> 19, 1, 10, 46, 40, 41, 22, 6, 12, 43, 31, 57, 52,… cdm$mgus_diagnosis %>%        addCohortSurvival(        cdm = cdm,        outcomeCohortTable = \"death_cohort\",        outcomeDateVariable = \"cohort_end_date\",        censorOnDate = as.Date(\"1994-01-01\")        ) %>%     filter(cohort_start_date > \"1993-01-01\") %>%   glimpse() #> Rows: ?? #> Columns: 13 #> Database: DuckDB v1.2.1 [unknown@Linux 6.8.0-1021-azure:R 4.4.3/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 213, 1245, 1248, 1340, 1374, 1376, 1380, 1384, 94… #> $ cohort_start_date    <date> 1994-01-01, 1994-01-01, 1994-01-01, 1994-01-01, … #> $ cohort_end_date      <date> 1994-01-01, 1994-01-01, 1994-01-01, 1994-01-01, … #> $ age                  <dbl> 93, 82, 87, 67, 68, 67, 69, 79, 85, 81, 66, 86, 8… #> $ sex                  <fct> F, M, M, F, F, F, M, M, M, M, M, F, F, F, F, F, M… #> $ hgb                  <dbl> 12.8, 11.4, 12.7, 12.2, 9.2, 13.7, 15.0, 9.6, 13.… #> $ creat                <dbl> 1.1, 1.5, 1.5, 1.4, 1.8, 1.1, 0.8, 1.1, 1.1, 1.4,… #> $ mspike               <dbl> 0.8, 1.4, 0.5, 1.2, 0.5, 1.5, 0.0, 1.7, 1.5, 1.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \"<70\", \"<70\", \"<70… #> $ days_to_exit         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ status               <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… #> $ time                 <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0… survival::coxph(survival::Surv(time, status) ~ age + sex, data = input_survival_single) #> Call: #> survival::coxph(formula = survival::Surv(time, status) ~ age +  #>     sex, data = input_survival_single) #>  #>          coef exp(coef) se(coef)      z        p #> age  0.061622  1.063561 0.003402 18.114  < 2e-16 #> sexM 0.358258  1.430835 0.065693  5.454 4.94e-08 #>  #> Likelihood ratio test=391.2  on 2 df, p=< 2.2e-16 #> n= 1384, number of events= 963 survival::survdiff(survival::Surv(time, status) ~ sex, data = input_survival_single) #> Call: #> survival::survdiff(formula = survival::Surv(time, status) ~ sex,  #>     data = input_survival_single) #>  #>         N Observed Expected (O-E)^2/E (O-E)^2/V #> sex=F 631      423      471      4.88      9.67 #> sex=M 753      540      492      4.67      9.67 #>  #>  Chisq= 9.7  on 1 degrees of freedom, p= 0.002"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a03_Further_survival_analyses.html","id":"further-analysis-with-competing-risk-survival","dir":"Articles","previous_headings":"","what":"Further analysis with competing risk survival","title":"Further survival analyses","text":"competing risk settings, need use function adds time status information, twice. first need add time status information outcome, competing outcome. leverage variables get outcome () count per individual can feed result subsequent models. can use package cmprsk fit Fine Gray model competing risk data. first change sex covariate numeric, can run analysis:","code":"# Add all status and time information for both outcomes   input_survival_cr <- cdm$mgus_diagnosis %>%     addCohortSurvival(cdm, \"progression\") %>%     dplyr::rename(       \"outcome_time\" = \"time\",       \"outcome_status\" = \"status\"     ) %>%      addCohortSurvival(cdm, \"death_cohort\") %>%     dplyr::rename(       \"competing_outcome_time\" = \"time\",       \"competing_outcome_status\" = \"status\"     )      # Collect and    input_survival_cr <- input_survival_cr %>%     dplyr::collect() %>%     dplyr::mutate(       time = pmin(outcome_time, competing_outcome_time),       status = factor(         dplyr::if_else(competing_outcome_time <= outcome_time, 2 * competing_outcome_status, outcome_status))     ) %>%     dplyr::select(-c(\"outcome_time\", \"outcome_status\", \"competing_outcome_time\", \"competing_outcome_status\")) input_survival_cr <- input_survival_cr %>%   dplyr::mutate(sex = dplyr::if_else(sex == \"M\", 0, 1))  covs <- data.frame(input_survival_cr$age, input_survival_cr$sex) names(covs) <- c(\"age\", \"sex\")  summary(cmprsk::crr(ftime = input_survival_cr$time,             fstatus = input_survival_cr$status,             cov1 = covs,             failcode = 1,             cencode = 0)) #> Competing Risks Regression #>  #> Call: #> cmprsk::crr(ftime = input_survival_cr$time, fstatus = input_survival_cr$status,  #>     cov1 = covs, failcode = 1, cencode = 0) #>  #>        coef exp(coef) se(coef)     z p-value #> age -0.0192     0.981  0.00585 -3.28   0.001 #> sex  0.2871     1.333  0.19309  1.49   0.140 #>  #>     exp(coef) exp(-coef)  2.5% 97.5% #> age     0.981       1.02 0.970 0.992 #> sex     1.333       0.75 0.913 1.945 #>  #> Num. cases = 1384 #> Pseudo Log-likelihood = -726  #> Pseudo likelihood ratio test = 8.32  on 2 df,"},{"path":"https://darwin-eu.github.io/CohortSurvival/articles/a03_Further_survival_analyses.html","id":"disconnect-from-the-cdm-database-connection","dir":"Articles","previous_headings":"","what":"Disconnect from the cdm database connection","title":"Further survival analyses","text":"finish disconnecting cdm database connection.","code":"cdmDisconnect(cdm)"},{"path":"https://darwin-eu.github.io/CohortSurvival/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kim López-Güell. Author, maintainer. Edward Burn. Author. Marti Catala. Author. Xintong Li. Author. Danielle Newby. Author. Nuria Mercade-Besora. Author.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"López-Güell K, Burn E, Catala M, Li X, Newby D, Mercade-Besora N (2025). CohortSurvival: Estimate Survival Common Data Model Cohorts. R package version 1.0.0, https://darwin-eu-dev.github.io/CohortSurvival/.","code":"@Manual{,   title = {CohortSurvival: Estimate Survival from Common Data Model Cohorts},   author = {Kim López-Güell and Edward Burn and Marti Catala and Xintong Li and Danielle Newby and Nuria Mercade-Besora},   year = {2025},   note = {R package version 1.0.0},   url = {https://darwin-eu-dev.github.io/CohortSurvival/}, }"},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"cohortsurvival-","dir":"","previous_headings":"","what":"Estimate Survival from Common Data Model Cohorts","title":"Estimate Survival from Common Data Model Cohorts","text":"CohortSurvival contains functions extracting summarising survival data using OMOP common data model.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Survival from Common Data Model Cohorts","text":"can install CohortSurvival like :","code":"install.packages(\"CohortSurvival\")"},{"path":[]},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"create-a-reference-to-data-in-the-omop-cdm-format","dir":"","previous_headings":"Example usage","what":"Create a reference to data in the OMOP CDM format","title":"Estimate Survival from Common Data Model Cohorts","text":"CohortSurvival package designed work data OMOP CDM format, first step create reference data using CDMConnector package. example ´ll use cdm reference containing MGUS2 dataset survival package (transformed set OMOP CDM style cohort tables). MGUS2 dataset contains survival data 1341 sequential patients monoclonal gammopathy undetermined significance (MGUS). information see ?survival::mgus2. cdm reference three cohort tables interest: 1) MGUS diagnosis cohort MGUS progression multiple myeloma cohort Death cohort","code":"library(CDMConnector) library(CohortSurvival) library(dplyr) library(ggplot2)  cdm <- CohortSurvival::mockMGUS2cdm() cdm$mgus_diagnosis %>%   glimpse() #> Rows: ?? #> Columns: 10 #> Database: DuckDB v1.1.3 [lopezk@Windows 10 x64:R 4.3.2/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15… #> $ cohort_start_date    <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ cohort_end_date      <date> 1981-01-01, 1968-01-01, 1980-01-01, 1977-01-01, … #> $ age                  <dbl> 88, 78, 94, 68, 90, 90, 89, 87, 86, 79, 86, 89, 8… #> $ sex                  <fct> F, F, M, M, F, M, F, F, F, F, M, F, M, F, M, F, F… #> $ hgb                  <dbl> 13.1, 11.5, 10.5, 15.2, 10.7, 12.9, 10.5, 12.3, 1… #> $ creat                <dbl> 1.30, 1.20, 1.50, 1.20, 0.80, 1.00, 0.90, 1.20, 0… #> $ mspike               <dbl> 0.5, 2.0, 2.6, 1.2, 1.0, 0.5, 1.3, 1.6, 2.4, 2.3,… #> $ age_group            <chr> \">=70\", \">=70\", \">=70\", \"<70\", \">=70\", \">=70\", \">… cdm$progression %>%   glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.1.3 [lopezk@Windows 10 x64:R 4.3.2/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 56, 81, 83, 111, 124, 127, 147, 163, 165, 167, 18… #> $ cohort_start_date    <date> 1978-01-30, 1985-01-15, 1974-08-17, 1993-01-14, … #> $ cohort_end_date      <date> 1978-01-30, 1985-01-15, 1974-08-17, 1993-01-14, … cdm$death_cohort %>%   glimpse() #> Rows: ?? #> Columns: 4 #> Database: DuckDB v1.1.3 [lopezk@Windows 10 x64:R 4.3.2/:memory:] #> $ cohort_definition_id <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1… #> $ subject_id           <int> 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1… #> $ cohort_start_date    <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, … #> $ cohort_end_date      <date> 1981-01-31, 1968-01-26, 1980-02-16, 1977-04-03, …"},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"mgus-diagnosis-to-death","dir":"","previous_headings":"Example usage","what":"MGUS diagnosis to death","title":"Estimate Survival from Common Data Model Cohorts","text":"can get survival estimates death following MGUS diagnosis like : Now results, can quickly create plot summarising survival time.  Among others, can check survival summary target outcome cohorts interest: well estimating survival cohort overall, can also estimate survival strata. strata based variables added target cohort previously columns.","code":"MGUS_death <- estimateSingleEventSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"death_cohort\" ) MGUS_death %>%    glimpse() #> Rows: 1,354 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock\", \"mock… #> $ group_name       <chr> \"target_cohort\", \"target_cohort\", \"target_cohort\", \"t… #> $ group_level      <chr> \"mgus_diagnosis\", \"mgus_diagnosis\", \"mgus_diagnosis\",… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"outcome\", \"outcome\", \"outcome\", \"outcome\", \"outcome\"… #> $ variable_level   <chr> \"death_cohort\", \"death_cohort\", \"death_cohort\", \"deat… #> $ estimate_name    <chr> \"estimate\", \"estimate_95CI_lower\", \"estimate_95CI_upp… #> $ estimate_type    <chr> \"numeric\", \"numeric\", \"numeric\", \"numeric\", \"numeric\"… #> $ estimate_value   <chr> \"1\", \"1\", \"1\", \"0.9697\", \"0.9607\", \"0.9787\", \"0.9494\"… #> $ additional_name  <chr> \"time\", \"time\", \"time\", \"time\", \"time\", \"time\", \"time… #> $ additional_level <chr> \"0\", \"0\", \"0\", \"1\", \"1\", \"1\", \"2\", \"2\", \"2\", \"3\", \"3\"… plotSurvival(MGUS_death) tableSurvival(MGUS_death, times = c(30,60,180)) MGUS_death <- estimateSingleEventSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"death_cohort\",   strata = list(c(\"age_group\"),                 c(\"sex\"),                 c(\"age_group\", \"sex\")) )  plotSurvival(MGUS_death,               colour = \"strata_level\",               facet= \"strata_name\")"},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"estimating-survival-accounting-for-a-competing-risk","dir":"","previous_headings":"","what":"Estimating survival accounting for a competing risk","title":"Estimate Survival from Common Data Model Cohorts","text":"package also allows estimate survival outcome competing risk outcome together. can stratify, see information events summarise estimates way single event survival analysis.  single event survival, can stratify competing risk analysis.","code":"MGUS_death_prog <- estimateCompetingRiskSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"progression\",   competingOutcomeCohortTable = \"death_cohort\" )  plotSurvival(MGUS_death_prog, cumulativeFailure = TRUE,              colour = \"variable_level\") MGUS_death_prog <-  estimateCompetingRiskSurvival(cdm,   targetCohortTable = \"mgus_diagnosis\",   outcomeCohortTable = \"progression\",   competingOutcomeCohortTable = \"death_cohort\",   strata = list(c(\"age_group\", \"sex\")) )  plotSurvival(MGUS_death_prog  %>%              dplyr::filter(strata_name != \"overall\"),               cumulativeFailure = TRUE,              facet = \"strata_level\",              colour = \"variable_level\")"},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"disconnect-from-the-cdm-database-connection","dir":"","previous_headings":"Estimating survival accounting for a competing risk","what":"Disconnect from the cdm database connection","title":"Estimate Survival from Common Data Model Cohorts","text":"","code":"cdmDisconnect(cdm)"},{"path":"https://darwin-eu.github.io/CohortSurvival/index.html","id":"additional-information","dir":"","previous_headings":"Estimating survival accounting for a competing risk","what":"Additional information","title":"Estimate Survival from Common Data Model Cohorts","text":"can check additional functionality package website.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/CohortSurvival-package.html","id":null,"dir":"Reference","previous_headings":"","what":"CohortSurvival: Estimate Survival from Common Data Model Cohorts — CohortSurvival-package","title":"CohortSurvival: Estimate Survival from Common Data Model Cohorts — CohortSurvival-package","text":"Estimate survival using data mapped Observational Medical Outcomes Partnership common data model. Survival can estimated based user-defined study cohorts.","code":""},{"path":[]},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/CohortSurvival-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CohortSurvival: Estimate Survival from Common Data Model Cohorts — CohortSurvival-package","text":"Maintainer: Kim López-Güell kim.lopez@spc.ox.ac.uk (ORCID) Authors: Edward Burn edward.burn@ndorms.ox.ac.uk (ORCID) Marti Catala marti.catalasabate@ndorms.ox.ac.uk (ORCID) Xintong Li xintong.li@ndorms.ox.ac.uk (ORCID) Danielle Newby danielle.newby@ndorms.ox.ac.uk (ORCID) Nuria Mercade-Besora nuria.mercadebesora@ndorms.ox.ac.uk (ORCID)","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Add survival information to a cohort table — addCohortSurvival","title":"Add survival information to a cohort table — addCohortSurvival","text":"Add survival information cohort table","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add survival information to a cohort table — addCohortSurvival","text":"","code":"addCohortSurvival(   x,   cdm,   outcomeCohortTable,   outcomeCohortId = 1,   outcomeDateVariable = \"cohort_start_date\",   outcomeWashout = Inf,   censorOnCohortExit = FALSE,   censorOnDate = NULL,   followUpDays = Inf,   name = NULL )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add survival information to a cohort table — addCohortSurvival","text":"x cohort table add survival information cdm CDM reference outcomeCohortTable outcome cohort table interest. outcomeCohortId ID event cohorts include. one outcome (one ID) can considered. outcomeDateVariable Variable containing date outcome event outcomeWashout Washout time days outcome censorOnCohortExit TRUE, individual's follow censored cohort exit censorOnDate NULL, individual's follow censored given date followUpDays Number days follow individuals (lower bound 1, upper bound Inf) name Name new table, NULL temporary table returned.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add survival information to a cohort table — addCohortSurvival","text":"Two additional columns added x. \"time\" column contain number days censoring. \"status\" column indicate whether patient event (value: 1), event (value: 0)","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/addCohortSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add survival information to a cohort table — addCohortSurvival","text":"","code":"# \\donttest{  cdm <- mockMGUS2cdm() #> ■■■■■■■■■■■■■■■■■■■■■■■■■         80% | ETA:  1s cdm$mgus_diagnosis <- cdm$mgus_diagnosis %>%   addCohortSurvival(     cdm = cdm,     outcomeCohortTable = \"death_cohort\",     outcomeCohortId = 1   )   # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":null,"dir":"Reference","previous_headings":"","what":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"tidy implementation summarised_characteristics object.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"","code":"asSurvivalResult(result)"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"result summarised_characteristics object.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"tibble tidy version summarised_characteristics object.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/asSurvivalResult.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A tidy implementation of the summarised_characteristics object. — asSurvivalResult","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() surv <- estimateSingleEventSurvival(   cdm = cdm,   targetCohortTable = \"mgus_diagnosis\",   targetCohortId = 1,   outcomeCohortTable = \"death_cohort\",   outcomeCohortId = 1,   eventGap = 7 ) %>%   asSurvivalResult() #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'death_cohort' #> Getting overall estimates #> `eventgap`, `outcome_washout`, `censor_on_cohort_exit`, `follow_up_days`, and #> `minimum_survival_days` casted to character. # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"Estimate survival given event competing risk interest using cohorts OMOP Common Data Model","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"","code":"estimateCompetingRiskSurvival(   cdm,   targetCohortTable,   outcomeCohortTable,   competingOutcomeCohortTable,   targetCohortId = NULL,   outcomeCohortId = NULL,   outcomeDateVariable = \"cohort_start_date\",   outcomeWashout = Inf,   competingOutcomeCohortId = NULL,   competingOutcomeDateVariable = \"cohort_start_date\",   competingOutcomeWashout = Inf,   censorOnCohortExit = FALSE,   censorOnDate = NULL,   followUpDays = Inf,   strata = NULL,   eventGap = 30,   estimateGap = 1,   restrictedMeanFollowUp = NULL,   minimumSurvivalDays = 1 )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"cdm CDM reference targetCohortTable targetCohortTable outcomeCohortTable outcome cohort table interest. competingOutcomeCohortTable competing outcome cohort table interest. targetCohortId targetCohortId outcomeCohortId ID event cohorts include. one outcome (one ID) can considered. outcomeDateVariable Variable containing date outcome event outcomeWashout Washout time days outcome competingOutcomeCohortId ID event cohorts include. one competing outcome (one ID) can considered. competingOutcomeDateVariable Variable containing date competing outcome event competingOutcomeWashout Washout time days competing outcome censorOnCohortExit TRUE, individual's follow censored cohort exit censorOnDate NULL, individual's follow censored given date followUpDays Number days follow individuals (lower bound 1, upper bound Inf) strata strata eventGap Days time points report survival events, grouped specified intervals. estimateGap Days time points report survival estimates. First day day zero risk estimates provided times end follow-, gap days equivalent eventGap. restrictedMeanFollowUp number days follow-take account calculating restricted mean cohorts minimumSurvivalDays Minimum number days required main cohort survived","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"tibble survival information desired cohort, including: time, people risk, survival probability, cumulative incidence, 95 CIs, strata outcome. tibble number events outputted attribute output","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateCompetingRiskSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate survival for a given event and competing risk of interest using cohorts in the OMOP Common Data Model — estimateCompetingRiskSurvival","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() surv <- estimateCompetingRiskSurvival(   cdm = cdm,   targetCohortTable = \"mgus_diagnosis\",   targetCohortId = 1,   outcomeCohortTable = \"progression\",   outcomeCohortId = 1,   competingOutcomeCohortTable = \"death_cohort\",   competingOutcomeCohortId = 1,   eventGap = 7 ) #> - Getting survival for target cohort 'mgus_diagnosis', outcome cohort #> 'progression' and competing outcome cohort 'death_cohort' #> Getting overall estimates #> `eventgap`, `outcome_washout`, `censor_on_cohort_exit`, `follow_up_days`, and #> `minimum_survival_days` casted to character. # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"Estimate survival given event interest using cohorts OMOP Common Data Model","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"","code":"estimateSingleEventSurvival(   cdm,   targetCohortTable,   outcomeCohortTable,   targetCohortId = NULL,   outcomeCohortId = NULL,   outcomeDateVariable = \"cohort_start_date\",   outcomeWashout = Inf,   censorOnCohortExit = FALSE,   censorOnDate = NULL,   followUpDays = Inf,   strata = NULL,   eventGap = 30,   estimateGap = 1,   restrictedMeanFollowUp = NULL,   minimumSurvivalDays = 1 )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"cdm CDM reference targetCohortTable targetCohortTable outcomeCohortTable outcome cohort table interest. targetCohortId targetCohortId outcomeCohortId ID event cohorts include. one outcome (one ID) can considered. outcomeDateVariable Variable containing date outcome event outcomeWashout Washout time days outcome censorOnCohortExit TRUE, individual's follow censored cohort exit censorOnDate NULL, individual's follow censored given date followUpDays Number days follow individuals (lower bound 1, upper bound Inf) strata strata eventGap Days time points report survival events, grouped specified intervals. estimateGap Days time points report survival estimates. First day day zero risk estimates provided times end follow-, gap days equivalent eventGap. restrictedMeanFollowUp number days follow-take account calculating restricted mean cohorts minimumSurvivalDays Minimum number days required main cohort survived","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"tibble survival information desired cohort, including: time, people risk, survival probability, cumulative incidence, 95 CIs, strata outcome. tibble number events outputted attribute output","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/estimateSingleEventSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate survival for a given event of interest using cohorts in the OMOP Common Data Model — estimateSingleEventSurvival","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() #> ■■■■■■■■■■■■■■■■■■■■■■■■■         80% | ETA:  1s surv <- estimateSingleEventSurvival(   cdm = cdm,   targetCohortTable = \"mgus_diagnosis\",   targetCohortId = 1,   outcomeCohortTable = \"death_cohort\",   outcomeCohortId = 1,   eventGap = 7 ) #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'death_cohort' #> Getting overall estimates #> `eventgap`, `outcome_washout`, `censor_on_cohort_exit`, `follow_up_days`, and #> `minimum_survival_days` casted to character. # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/mockMGUS2cdm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","title":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","text":"Create mock CDM reference survival::mgus2 dataset","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/mockMGUS2cdm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","text":"","code":"mockMGUS2cdm()"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/mockMGUS2cdm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","text":"CDM reference containing data survival::mgus2 dataset","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/mockMGUS2cdm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create mock CDM reference with survival::mgus2 dataset — mockMGUS2cdm","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() #> ■■■■■■■■■■■■■■■■■■■■■■■■■         80% | ETA:  1s cdm$person #> # Source:   table<person> [?? x 7] #> # Database: DuckDB v1.2.1 [unknown@Linux 6.8.0-1021-azure:R 4.4.3/:memory:] #>    person_id gender_concept_id year_of_birth month_of_birth day_of_birth #>        <int>             <int>         <int>          <int>        <int> #>  1         1              8532          1980             10            5 #>  2         2              8532          1967             10           15 #>  3         3              8507          1979              9           29 #>  4         4              8507          1976             10           25 #>  5         5              8532          1972             10            3 #>  6         6              8507          1989             10            3 #>  7         7              8532          1973             10            4 #>  8         8              8532          1973             10            6 #>  9         9              8532          1993             10            7 #> 10        10              8532          1980             10           14 #> # ℹ more rows #> # ℹ 2 more variables: race_concept_id <int>, ethnicity_concept_id <int> # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/optionsTableSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Additional arguments for the function tableSurvival() — optionsTableSurvival","title":"Additional arguments for the function tableSurvival() — optionsTableSurvival","text":"provides list allowed inputs .option argument tableSurvival given default value.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/optionsTableSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Additional arguments for the function tableSurvival() — optionsTableSurvival","text":"","code":"optionsTableSurvival()"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/optionsTableSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Additional arguments for the function tableSurvival() — optionsTableSurvival","text":"default .options named list.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/optionsTableSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Additional arguments for the function tableSurvival() — optionsTableSurvival","text":"","code":"{ optionsTableSurvival() } #> $decimals #>    integer percentage    numeric proportion  #>          0          2          2          2  #>  #> $decimalMark #> [1] \".\" #>  #> $bigMark #> [1] \",\" #>  #> $delim #> [1] \"\\n\" #>  #> $includeHeaderName #> [1] TRUE #>  #> $includeHeaderKey #> [1] TRUE #>  #> $style #> [1] \"default\" #>  #> $na #> [1] \"-\" #>  #> $title #> NULL #>  #> $subtitle #> NULL #>  #> $caption #> NULL #>  #> $groupAsColumn #> [1] FALSE #>  #> $groupOrder #> NULL #>  #> $merge #> [1] \"all_columns\" #>"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot survival results — plotSurvival","title":"Plot survival results — plotSurvival","text":"Plot survival results","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot survival results — plotSurvival","text":"","code":"plotSurvival(   result,   ribbon = TRUE,   facet = NULL,   colour = NULL,   cumulativeFailure = FALSE,   riskTable = FALSE,   riskInterval = 30 )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot survival results — plotSurvival","text":"result Survival results ribbon TRUE, plot join points using ribbon facet Variables use facets colour Variables use colours cumulativeFailure whether plot cumulative failure probability instead survival probability riskTable Whether print risk table plot riskInterval Interval time print risk table plot","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot survival results — plotSurvival","text":"plot survival probabilities time","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/plotSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot survival results — plotSurvival","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() surv <- estimateSingleEventSurvival(cdm,                                     targetCohortTable = \"mgus_diagnosis\",                                     outcomeCohortTable = \"death_cohort\") #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'death_cohort' #> Getting overall estimates #> `eventgap`, `outcome_washout`, `censor_on_cohort_exit`, `follow_up_days`, and #> `minimum_survival_days` casted to character. plotSurvival(surv)  # }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. omopgenerics attrition, bind, cohortCodelist, cohortCount, exportSummarisedResult, importSummarisedResult, settings, suppress","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/riskTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Table with survival events — riskTable","title":"Table with survival events — riskTable","text":"Table survival events","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/riskTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table with survival events — riskTable","text":"","code":"riskTable(   x,   eventGap = NULL,   header = c(\"estimate\"),   type = \"gt\",   groupColumn = NULL,   .options = list() )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/riskTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table with survival events — riskTable","text":"x Result estimateSingleEventSurvival estimateCompetingRiskSurvival. eventGap Event gap defining times report risk table information. Must one eventGap inputs used estimation function. NULL, available reported. header vector containing elements go header. Allowed : cdm_name, group, strata, additional, variable, estimate, settings. type Type desired formatted table, possibilities: \"gt\", \"flextable\",  \"tibble\". groupColumn Columns use group labels. .options Named list additional formatting options. CohortSurvival::optionsTableSurvival() shows allowed arguments default values.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/riskTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table with survival events — riskTable","text":"tibble containing risk table information (n_risk, n_events, n_censor) times within event gap specified.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/riskTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table with survival events — riskTable","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() surv <- estimateSingleEventSurvival(cdm,                                     targetCohortTable = \"mgus_diagnosis\",                                     outcomeCohortTable = \"death_cohort\") #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'death_cohort' #> Getting overall estimates #> `eventgap`, `outcome_washout`, `censor_on_cohort_exit`, `follow_up_days`, and #> `minimum_survival_days` casted to character. riskTable(surv)     CDM name       Target cohort       Outcome name       Time       Event gap                Estimate name            Number at risk       Number events       Number censored     mock mgus_diagnosis death_cohort 0 30 1,384 0 0   30 30 1,104 285 3   60 30 895 182 27   90 30 652 167 79   120 30 438 131 74   150 30 299 86 54   180 30 187 57 54   210 30 109 20 58   240 30 61 15 33   270 30 31 11 18   300 30 16 4 10   330 30 7 3 6   360 30 3 1 3   390 30 2 0 1   420 30 1 0 1   424 30 1 1 0# }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":null,"dir":"Reference","previous_headings":"","what":"Table with survival summary — tableSurvival","title":"Table with survival summary — tableSurvival","text":"Table survival summary","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Table with survival summary — tableSurvival","text":"","code":"tableSurvival(   x,   times = NULL,   timeScale = \"days\",   header = c(\"estimate\"),   type = \"gt\",   groupColumn = NULL,   .options = list() )"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Table with survival summary — tableSurvival","text":"x Result estimateSingleEventSurvival estimateCompetingRiskSurvival times Times report survival summary table timeScale Time unit report survival : days, months years header vector containing elements go header. Allowed : cdm_name, group, strata, additional, variable, estimate, settings. type Type desired formatted table, possibilities: \"gt\", \"flextable\",  \"tibble\". groupColumn Columns use group labels. .options Named list additional formatting options. CohortSurvival::optionsTableSurvival() shows allowed arguments default values.","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Table with survival summary — tableSurvival","text":"tibble containing summary observed survival required units","code":""},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tableSurvival.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Table with survival summary — tableSurvival","text":"","code":"# \\donttest{ cdm <- mockMGUS2cdm() surv <- estimateSingleEventSurvival(cdm,                                     targetCohortTable = \"mgus_diagnosis\",                                     outcomeCohortTable = \"death_cohort\") #> - Getting survival for target cohort 'mgus_diagnosis' and outcome cohort #> 'death_cohort' #> Getting overall estimates #> `eventgap`, `outcome_washout`, `censor_on_cohort_exit`, `follow_up_days`, and #> `minimum_survival_days` casted to character. tableSurvival(surv, times = c(50,100,365))     CDM name       Target cohort       Outcome name                Estimate name            Number records       Number events       Median survival (95% CI)       Restricted mean survival (SE)       50 days survival estimate       100 days survival estimate       365 days survival estimate     mock mgus_diagnosis death_cohort 1,384 963 98.00 (92.00, 103.00) 133.00 (4.00) 69.67 (67.28, 72.13) 48.50 (45.87, 51.29) 6.84 (3.36, 13.92)# }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers — tidyeval","title":"Tidy eval helpers — tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"https://darwin-eu.github.io/CohortSurvival/reference/tidyeval.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy eval helpers — tidyeval","text":"return value, called side effects","code":""}]
